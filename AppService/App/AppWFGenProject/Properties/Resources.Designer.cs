//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppWFGenProject.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AppWFGenProject.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] appconfig {
            get {
                object obj = ResourceManager.GetObject("appconfig", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using {nameproject}.Api.Application.Behaviors;
        ///using {nameproject}.Domain.Repositories;
        ///using {nameproject}.Domain.Services;
        ///using {nameproject}.Infrastructure.Repositories;
        ///using {nameproject}.Infrastructure.Services;
        ///using Autofac;
        ///using MediatR;
        ///
        ///namespace {nameproject}.Api.Infrastructure.AutofacModules
        ///{
        ///    public class ApplicationModule : Module
        ///    {
        ///        protected override void Load(ContainerBuilder builder)
        ///        {
        ///            // register services
        ///            builder.RegisterGen [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ApplicationModule {
            get {
                return ResourceManager.GetString("ApplicationModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using MediatR;
        ///using Services.Common.DomainObjects;
        ///using System;
        ///
        ///namespace  {nameproject}.Api.Application.Commands
        ///{
        ///    public class Create{Entity}Command : {Entity}CommandSet, IRequest&lt;MethodResult&lt;Create{Entity}CommandResponse&gt;&gt;
        ///    {
        ///       
        ///    }
        ///
        ///    public class Create{Entity}CommandResponse : {Entity}CommandResponseDTO { }
        ///}.
        /// </summary>
        public static string CreateEntityCommand {
            get {
                return ResourceManager.GetString("CreateEntityCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using {nameproject}.Domain.DomainObjects;
        ///using {nameproject}.Domain.Repositories;
        ///using AutoMapper;using Microsoft.AspNetCore.Http;
        ///using MediatR;
        ///using Services.Common.DomainObjects;
        ///using System.Threading;
        ///using System.Threading.Tasks;
        ///
        ///namespace  {nameproject}.Api.Application.Commands
        ///{
        ///    public class Create{Entity}CommandHandler : {Entity}CommandHandler, IRequestHandler&lt;Create{Entity}Command, MethodResult&lt;Create{Entity}CommandResponse&gt;&gt;
        ///    {
        ///        public Create{Entity}CommandHandler(IM [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CreateEntityCommandHandler {
            get {
                return ResourceManager.GetString("CreateEntityCommandHandler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using MediatR;
        ///using Services.Common.DomainObjects;
        ///using System.Collections.Generic;
        ///
        ///namespace  {nameproject}.Api.Application.Commands
        ///{
        ///    public class Delete{Entity}Command : IRequest&lt;MethodResult&lt;Delete{Entity}CommandResponse&gt;&gt;
        ///    {
        ///        public List&lt;int&gt; Ids { get; set; }
        ///    }
        ///
        ///    public class Delete{Entity}CommandResponse
        ///    {
        ///        public Delete{Entity}CommandResponse(List&lt;{Entity}CommandResponseDTO&gt; {Entity})
        ///        {
        ///            _{Entity} = {Entity};
        ///        }
        ///
        ///         [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DeleteEntityCommand {
            get {
                return ResourceManager.GetString("DeleteEntityCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using {nameproject}.Domain;
        ///using {nameproject}.Domain.Repositories;
        ///using AutoMapper;
        ///using MediatR;
        ///using Services.Common.DomainObjects;
        ///using Services.Common.DomainObjects.Exceptions;
        ///using Services.Common.Utilities;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Threading;
        ///using System.Threading.Tasks;
        ///using Microsoft.AspNetCore.Http;
        ///
        ///namespace {nameproject}.Api.Application.Commands
        ///{
        ///    public class Delete{Entity}CommandHandler : {Entity}CommandHandler [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DeleteEntityCommandHandler {
            get {
                return ResourceManager.GetString("DeleteEntityCommandHandler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using {nameproject}.Domain.DomainObjects.BaseClasses;
        ///using Services.Common.DomainObjects.Exceptions;
        ///using System.ComponentModel.DataAnnotations;
        ///
        ///
        ///namespace {nameproject}.Domain.DomainObjects
        ///{
        ///    public class {Entity} : DOBase
        ///    {
        ///        #region Fields
        ///        {builderFields}
        ///        #endregion Fields
        ///        #region Constructors
        ///
        ///        private {Entity}()
        ///        {
        ///        }
        ///
        ///        public {Entity}({paramCreate}) : this()
        ///        {
        ///           {functionCreate}
        ///        }
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Entity {
            get {
                return ResourceManager.GetString("Entity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///namespace {nameproject}.Api.Application.Commands
        ///{
        ///    public class {Entity}CommandResponseDTO : {Entity}CommandSet
        ///    {
        ///     
        ///    }
        ///}.
        /// </summary>
        public static string EntityCommand {
            get {
                return ResourceManager.GetString("EntityCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using {nameproject}.Domain.Repositories;
        ///using AutoMapper;
        ///using Microsoft.AspNetCore.Http;
        ///using Services.Common.Security;
        ///
        ///namespace {nameproject}.Api.Application.Commands
        ///{
        ///    public class {Entity}CommandHandler : BaseCommandHandler
        ///    {
        ///        protected readonly IMapper _mapper;
        ///        protected readonly IHttpContextAccessor _httpContextAccessor;
        ///        protected readonly I{Entity}Repository {_entity}Repository;
        ///
        ///        public {Entity}CommandHandler(IMapper mapper, IHttpContextAccesso [rest of string was truncated]&quot;;.
        /// </summary>
        public static string EntityCommandHandler {
            get {
                return ResourceManager.GetString("EntityCommandHandler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///
        ///namespace {nameproject}.Api.Application.Commands
        ///{
        ///    public class {Entity}CommandSet: BaseCommandClasses
        ///    {
        ///        {builderPublic}
        ///    }
        ///}.
        /// </summary>
        public static string EntityCommandSet {
            get {
                return ResourceManager.GetString("EntityCommandSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using {nameproject}.Domain.DomainObjects;
        ///using {common};
        ///using Microsoft.EntityFrameworkCore;
        ///using Microsoft.EntityFrameworkCore.Metadata.Builders;
        ///
        ///namespace {nameproject}.Infrastructure.EFConfig
        ///{
        ///    public class {Entity}Configuration : IEntityTypeConfiguration&lt;{Entity}&gt;
        ///    {
        ///        public void Configure(EntityTypeBuilder&lt;{Entity}&gt; builder)
        ///        {
        ///            {builderConfig}
        ///        }
        ///    }
        ///}.
        /// </summary>
        public static string EntityConfiguration {
            get {
                return ResourceManager.GetString("EntityConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using {common};
        ///using {nameproject}.Api.Controllers.{version}.BaseClasses;
        ///using {nameproject}.Api.ViewModels;
        ///using {nameproject}.Api.ViewModels.BaseClasses;
        ///using {nameproject}.Sql.DTOs;
        ///using {nameproject}.Sql.Interfaces;
        ///using {nameproject}.Sql.Parameters;
        ///using AutoMapper;
        ///using Microsoft.AspNetCore.Http;
        ///using Microsoft.AspNetCore.Mvc;
        ///using Services.Common.DomainObjects;
        ///using Services.Common.Paging;
        ///using System.Collections.Generic;
        ///using System.Net;
        ///using System.Threading.Tasks;
        ///
        ///na [rest of string was truncated]&quot;;.
        /// </summary>
        public static string EntityController {
            get {
                return ResourceManager.GetString("EntityController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using {nameproject}.Api.Application.Commands;
        ///using {nameproject}.Api.Controllers.{version}.BaseClasses;
        ///using MediatR;
        ///using Microsoft.AspNetCore.Mvc;
        ///using Services.Common.DomainObjects;
        ///using System.Net;
        ///using System.Threading.Tasks;
        ///
        ///namespace {nameproject}.Api.Controllers.{version}
        ///{
        ///    public class {Entity}Controller : APIControllerBase
        ///    {
        ///        public {Entity}Controller(IMediator mediator) : base(mediator)
        ///        {
        ///        }
        ///
        ///
        ///        #region {Entity}
        ///
        ///        /// &lt;summary&gt;        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string EntityControllerCMD {
            get {
                return ResourceManager.GetString("EntityControllerCMD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using {nameproject}.Sql.DTOs.BaseClasses;
        ///using System;
        ///
        ///namespace {nameproject}.Sql.DTOs
        ///{
        ///    public class {Entity}DTO : DTOBase
        ///    {
        ///        {builderPublic}
        ///    }
        ///}
        ///.
        /// </summary>
        public static string EntityDTO {
            get {
                return ResourceManager.GetString("EntityDTO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using {nameproject}.Api.ViewModels;
        ///using {nameproject}.Sql.DTOs;
        ///using AutoMapper;
        ///
        ///namespace {nameproject}.Api.Infrastructure.Mappings
        ///{
        ///   
        ///    public class {Entity}Profile : Profile
        ///    {
        ///        public {Entity}Profile()
        ///        { 
        ///            CreateMap&lt;{Entity}DTO, {Entity}ResponseViewModel&gt;().ForMember(target =&gt; target.Id, m =&gt; m.MapFrom(source =&gt; source.Id));
        ///        }
        ///    }
        ///}
        ///.
        /// </summary>
        public static string EntityProfile {
            get {
                return ResourceManager.GetString("EntityProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using {nameproject}.Api.Application.Commands;
        ///using {nameproject}.Domain.DomainObjects;
        ///using AutoMapper;
        ///
        ///
        ///namespace {nameproject}.Api.Infrastructure.Mappings
        ///{
        ///    public class {Entity}Profile : Profile 
        ///    {
        ///        public {Entity}Profile()
        ///        {
        ///            CreateMap&lt;{Entity}, Create{Entity}CommandResponse&gt;().ForMember(x =&gt; x.Id, opt =&gt; opt.MapFrom(t =&gt; t.Id));
        ///            CreateMap&lt;{Entity}, Update{Entity}CommandResponse&gt;().ForMember(x =&gt; x.Id, opt =&gt; opt.MapFrom(t =&gt; t.Id));
        ///         [rest of string was truncated]&quot;;.
        /// </summary>
        public static string EntityProfileCMD {
            get {
                return ResourceManager.GetString("EntityProfileCMD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using {nameproject}.Domain.DomainObjects;
        ///using {nameproject}.Domain.Repositories;
        ///using Services.Common.APIs.Cmd.EF;
        ///
        ///
        ///namespace {nameproject}.Infrastructure.Repositories
        ///{
        ///    public class {Entity}Repository : BaseRepository&lt;{Entity}&gt;, I{Entity}Repository
        ///    {
        ///        public {Entity}Repository({db}Context dbContext) : base(dbContext)
        ///        {
        ///        }
        ///    }
        ///}
        ///.
        /// </summary>
        public static string EntityRepository {
            get {
                return ResourceManager.GetString("EntityRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using {nameproject}.Api.ViewModels.BaseClasses;
        ///
        ///namespace {nameproject}.Api.ViewModels
        ///{
        ///    public class {Entity}ResponseViewModel : BaseResponseViewModel
        ///    {
        ///        {builderPublic}
        ///    }
        ///}
        ///.
        /// </summary>
        public static string EntityResponseViewModel {
            get {
                return ResourceManager.GetString("EntityResponseViewModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using {nameproject}.Domain.DomainObjects;
        ///using Services.Common.DomainObjects.Interfaces;
        ///
        ///namespace {nameproject}.Domain.Repositories
        ///{
        ///    public interface I{Entity}Repository :  ICmdRepository&lt;{Entity}&gt;
        ///    {
        ///      
        ///    }
        ///}
        ///    .
        /// </summary>
        public static string IEntityRepository {
            get {
                return ResourceManager.GetString("IEntityRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {nameproject}
        ///{common}
        ///{db}
        ///{Entity}
        ///{entity}
        ///{_entity}
        ///{version}
        ///{builderConfig}  -- EFConfig
        ///{builderFields}  -- DomainObjects,Fields
        ///{paramCreate}    -- DomainObjects,Fields
        ///{functionCreate} -- DomainObjects,Fields
        ///{builderProperties} -- DomainObjects,Properties
        ///{builderBehaviours} -- DomainObjects,Behaviours
        ///{biulderRegister} -- Infrastructure,AutofacModules
        ///{builderRequestParam} -- Commands,CreateCommand
        ///{builderSetUpdate} -- Commands,UpdateCommand
        ///{builderPublic}  -- DTOs
        ///.
        /// </summary>
        public static string listReplace {
            get {
                return ResourceManager.GetString("listReplace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using MediatR;
        ///using Services.Common.DomainObjects;
        ///
        ///namespace {nameproject}.Api.Application.Commands
        ///{
        ///    public class Update{Entity}Command : {Entity}CommandSet,IRequest&lt;MethodResult&lt;Update{Entity}CommandResponse&gt;&gt;
        ///    {
        ///       
        ///    }
        ///
        ///    public class Update{Entity}CommandResponse : {Entity}CommandResponseDTO
        ///    {
        ///    }
        ///}.
        /// </summary>
        public static string UpdateEntityCommand {
            get {
                return ResourceManager.GetString("UpdateEntityCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using {nameproject}.Domain;
        ///using {nameproject}.Domain.Repositories;
        ///using AutoMapper;
        ///using MediatR;
        ///using Services.Common.DomainObjects;
        ///using Services.Common.DomainObjects.Exceptions;
        ///using Services.Common.Utilities;
        ///using System.Threading;
        ///using System.Threading.Tasks;
        ///using Microsoft.AspNetCore.Http;
        ///
        ///namespace  {nameproject}.Api.Application.Commands
        ///{
        ///    public class Update{Entity}CommandHandler : {Entity}CommandHandler,IRequestHandler&lt;Update{Entity}Command, MethodResult&lt;Update{Entity}Co [rest of string was truncated]&quot;;.
        /// </summary>
        public static string UpdateEntityCommandHandler {
            get {
                return ResourceManager.GetString("UpdateEntityCommandHandler", resourceCulture);
            }
        }
    }
}

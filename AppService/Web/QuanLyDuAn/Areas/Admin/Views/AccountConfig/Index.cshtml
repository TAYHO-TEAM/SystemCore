
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <div class="col-12">
        <div id="container" class="elevation-2"></div>
    </div> 
</div>

@section script{
    <script>
        var ACTION = "/Accounts";
        var ds_main = new DevExpress.data.CustomStore({
            key: "id",
            load: (values) => {
                let deferred = $.Deferred();
                var params = {
                    'PageSize': isNullOrEmpty(values.take) ? values.take : 0,
                    'PageNumber': (isNullOrEmpty(values.take) && isNullOrEmpty(values.skip)) ? ((values.skip / values.take) + 1) : 0,
                };
                if (values.sort) {
                    params['SortCol'] = values.sort[0].selector;
                    params['SortADSC'] = values.sort[0].desc;
                }

                $.ajax({
                    headers: header,
                    url: URL_API_ACC_READ + ACTION,
                    dataType: "json",
                    data: params,
                    success: function (data) {
                        deferred.resolve(data.result.items, { totalCount: data.result.pagingInfo.totalItems });
                    },
                    error: function (xhr) {
                        console.log(xhr.responseJSON ? xhr.responseJSON.Message : xhr.statusText);
                        deferred.reject("Đã có lỗi xảy ra trong quá trình này. Mở Console để xem chi tiết hoặc liên hệ Quản trị viên.");
                    },
                });
                return deferred.promise();
            },
        });

        $(function () {
            loadData();
        });  

        var loadData = () => $("#container").dxDataGrid({
            dataSource: ds_main,
            height: heightScreen,
            showBorders: true, showColumnHeaders: true, showColumnLines: false, hoverStateEnabled: true,
            showRowLines: true, columnAutoWidth: true, wordWrapEnabled: true, rowAlternationEnabled: false,
            remoteOperations: true,
            columns: [
                {
                    dataField: "accountName", caption: "Tên đăng nhập",
                    dataType: "string",
                    validationRules: [
                        {
                            type: "required",
                            message: "Bắt buộc nhập thông tin"
                        }
                    ]
                },
                {
                    dataField: "salt", caption: "salt",
                    dataType: "string",
                },
                {
                    dataField: "refreshToken", caption: "Refreshtoken",
                    dataType: "number",
                    lookup: {
                        dataSource: listSexs,
                        valueExpr: "value",
                        displayExpr: "text"
                    },
                },
                {
                    dataField: "userId", caption: "Tên khách hàng",
                    cellTemplate: (container, options) => {
                        console.log(getName(options.value != null ? options.value : ''))
                    }
                }
            ],

            editing: {
                allowAdding: true,
                allowUpdating: true,
                allowDeleting: true,
                mode: "popup"
            }
        });
    </script>
}



@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Quản lý giai đoạn";
}

@section style{   }

<div id="container" class="elevation-2"></div>

@section script{
    <script>
        $(function () {
            let customStore = new DevExpress.data.CustomStore({
                key: "id",
                load: function (loadOptions) {
                    var deferred = $.Deferred(),
                        params = {
                            'PageSize': loadOptions["take"],
                            'PageNumber': loadOptions["skip"]
                        };
                    var header = {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*'
                    };
                    $.ajax({
                        headers: header,
                        url: URL_API_ACC_READ + "/UserInfo",
                        dataType: "json",
                        data: params,
                        success: function (data) {
                            deferred.resolve(
                                data.result.items,
                                {
                                    totalCount: data.result.pagingInfo.totalItems,
                                }
                            );
                        },
                        error: function (xhr, textStatus, errorThrown) {
                            deferred.reject("Có lỗi xảy ra trong quá trình lấy danh sách tài khoản. Error: " + errorThrown);
                        },
                        timeout: 5000
                    });
                    return deferred.promise();
                },
                insert: function (values) {
                    var header = {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*'
                    };
                    var deferred = $.Deferred();
                    $.ajax({
                        headers: header,
                        url: URL_API_ACC_CMD+'/UserInfo',
                        dataType: "json", type: "POST",
                        data: JSON.stringify(values),
                        success: function (data) {
                            deferred.resolve();
                        },
                        error: function (xhr, textStatus, errorThrown) {
                            deferred.reject("Có lỗi xảy ra trong quá trình này. Error: " + errorThrown);
                        },
                        timeout: 5000
                    });
                    return deferred.promise();
                },
                update: function (key, values) {
                    var keyObj = JSON.parse('{"id":'+key+'}');
                    var header = {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*'
                    };
                    var deferred = $.Deferred();
                    $.ajax({
                        headers: header,
                        url: URL_API_ACC_CMD + '/UserInfo',
                        dataType: "json",
                        type: "PUT",
                        data: JSON.stringify($.extend(keyObj, values)),
                        success: function (data) {
                            deferred.resolve();
                        },
                        error: function (xhr, textStatus, errorThrown) {
                            deferred.reject("Có lỗi xảy ra trong quá trình này. Error: " + errorThrown);
                        },
                        timeout: 5000
                    });
                    return deferred.promise();
                },
                remove: function (key) {
                    var deferred = $.Deferred();
                    var header = {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*'
                    };
                    $.ajax({
                        headers: header,
                        url: URL_API_ACC_CMD + "/UserInfo",
                        dataType: "json",
                        type: "DELETE",
                        data: JSON.stringify({
                            "ids": [key]
                        }),
                        success: function (data) {
                            deferred.resolve();
                        },
                        error: function (xhr, textStatus, errorThrown) {
                            deferred.reject("Có lỗi xảy ra trong quá trình lấy danh sách tài khoản. Error: " + errorThrown);
                        },
                        timeout: 5000
                    });
                    return deferred.promise();
                }
            });
            loadData(customStore);
        });

        function loadData(dataSource) {
            $("#container").dxDataGrid({
                height: heightScreen,
                dataSource: dataSource,
                showBorders: false, showColumnHeaders: true, showColumnLines: true, hoverStateEnabled: true,
                showRowLines: true, columnAutoWidth: true, wordWrapEnabled: true, rowAlternationEnabled: true,
                remoteOperations: true,
                columns: [
                    {
                        dataField: "firstName", caption:"Họ và tên",
                        dataType: "string",
                        validationRules: [
                            {
                                type: "required",
                                message: "Bắt buộc nhập thông tin"
                            }
                        ]
                    },
                    {
                        dataField: "lastName", caption:"Tên",
                        dataType: "string",
                    },
                    {
                        dataField: "sex", caption:"Giới tính",
                        dataType: "number",
                        lookup: {
                            dataSource: listSexs,
                            valueExpr: "value",
                            displayExpr: "text"
                        },
                    },
                    {
                        dataField: "dateOfBirth", caption: "Ngày sinh",
                        dataType: "date", format: "dd/MM/yyyy",
                    },
                    {
                        dataField: "country", caption: "Nước",
                    },
                    {
                        dataField: "city", caption: "Thành phố",
                    },
                    {
                        dataField: "district", caption: "Quận huyện",
                    },
                    {
                        dataField: "address", caption: "Địa chỉ",
                    }
                ],

                editing: {
                    allowAdding: true,
                    allowUpdating: true,
                    allowDeleting: true,
                    mode: "popup"
                }
            });
        }
    </script>
}

@{
    ViewBag.Title = "CustomTable";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-12">
        <div id="container" class="elevation-2"></div>
    </div>
</div>
@section script{
    <script src="~/Scripts/page/thongtin.js"></script>
    <script>
        //--------------------READ------------------------------
        const ACTION = "/CustomTable";

        //--------------------CMD------------------------------
        const ACTION_CMD = "/CustomTable";

        var PROJECTID = isNullOrEmpty(localStorage.getItem("projectIdCurrent")) ? parseInt(localStorage.getItem("projectIdCurrent")) : 0;

        var WIDTH_CONTAINER = $("#container").width();

        let customStore = customStore_CMD_READ(ACTION_CMD, ACTION);


        $(function () {
            loadData();
        });

        let loadData = () => {
            $("#container").dxDataGrid({
                height: heightScreen,
                dataSource: customStore,
                repaintChangesOnly: true,
                remoteOperations: {
                    filtering: true,
                    sorting: true,
                    grouping: false
                },
                scrolling: { mode: "standard" },
                rootValue: 0, parentIdExpr: "parentId", keyExpr: "id",
                showBorders: false, showColumnHeaders: true, showColumnLines: false, hoverStateEnabled: true,
                showRowLines: true, columnAutoWidth: true, wordWrapEnabled: true, rowAlternationEnabled: false,
                columns: [
                    {
                        dataField: "code",
                        caption: "Ký Hiệu",
                        dataType: "string",
                    },
                    {
                        dataField: "title",
                        caption: "Tên trường dữ liệu",
                        dataType: "string",
                    },
                    {
                        dataField: "noColum",
                        caption: "Vị trí cột",
                        dataType: "number",
                    },
                    {
                        dataField: "noRown",
                        caption: "Giới hạn dòng",
                        dataType: "number",
                    },
                    {
                        dataField: "style",
                        caption: "Định dạng CSS",
                        dataType: "number",
                    },
                    //{
                    //    dataField: "priority",
                    //    caption: "Vị trí",
                    //    dataType: "number",
                    //    width: 110,
                    //    alignment: "center",
                    //    editorType: "dxNumberBox",
                    //    editorOptions: {
                    //        min: 1, step: 1,
                    //        showSpinButtons: true,
                    //    }, 
                    //    sortOrder: "desc",
                    //},
                    {
                        dataField: "isActive", width: 100, alignment: "center",
                        editorType: "dxSwitch",
                    },
                    {
                        dataField: "isVisible", width: 100, alignment: "center",
                        editorType: "dxSwitch",
                    },
                    //{
                    //    type: "buttons", caption: "Tác vụ",
                    //    width: 120, alignment: "center",
                    //    buttons: ["add", "edit", "delete"]
                    //}
                ],
                //rowDragging: {
                //    allowDropInsideItem: true,
                //    allowReordering: false,
                //    dropFeedbackMode: "push",
                //    onDragEnd: function (e) {
                //        //var source = e.itemData,
                //        //    target = e.component.getVisibleRows()[e.toIndex].data,
                //        //    d = $.Deferred();
                //        //customStore.update(source.id, { parentId: (source.id != target.id) ? target.id : 0 }).then(() => {
                //        //    e.component.refresh().then(d.resolve, d.reject);
                //        //}, d.reject);
                //    },
                //},
                paging: {
                    enabled: true,
                    pageSize: 20
                },
                pager: {
                    showPageSizeSelector: true,
                    allowedPageSizes: [10, 20, 40],
                    showInfo: true,
                },
                searchPanel: {
                    highlightCaseSensitive: true,
                    highlightSearchText: true,
                    searchVisibleColumnsOnly: true,
                    visible: WIDTH_CONTAINER > 350
                },
                editing: {
                    allowAdding: true,
                    allowUpdating: true,
                    allowDeleting: true,
                    mode: "popup",
                    useIcons: false,
                    confirmDelete: true,
                },
                onToolbarPreparing: function (e) {
                    var container = e.component;
                    e.toolbarOptions.items.unshift(
                        {
                            location: "after", widget: "dxButton",
                            options: {
                                icon: "refresh", tylingMode: "filled", type: "default",
                                onClick: () => container.refresh()
                            }
                        })
                },
                onInitNewRow: (e) => {
                    e.data.isActive = true;
                    e.data.isVisible = true;
                },
                onCellPrepared: (e) => {
                    if (e.rowType == "data" && e.columnIndex == 1)
                        e.cellElement.find('.dx-treelist-empty-space').toggleClass("dx-treelist-collapsed", e.data.chilCount > 0)
                },
                  selection: {
                    mode: "single"
                },
                onContentReady: (e) => {
                    var container = e.component;
                  
                    $("#action-add").dxSpeedDialAction({
                        index: 1, icon: "fas fa-plus", label: "Thêm giá trị",
                        visible: (PermitInAction["insert"] ),
                        onClick: () => e.component.addRow(),
                    }).dxSpeedDialAction("instance");

                    DevExpress.config({
                        floatingActionButtonConfig: {
                            icon: "rowfield",
                            label: "Tác vụ",
                            shading: true,
                            position: {
                                of: e.element,
                                my: "right bottom",
                                at: "right bottom",
                                offset: e.component.pageCount() > 1 ? "-15 -60" : "-15 -15"
                            }
                        }
                    });
                    DevExpress.ui.repaintFloatingActionButton();
                },
                onSelectionChanged: (e) => {
                    var selectedRowData = e.selectedRowsData[0];
                    var selectedRowKey = e.selectedRowKeys[0];
                   
                    if (selectedRowData != null && selectedRowKey != null) {
                        var data = e.component.getRowIndexByKey(selectedRowKey);
                        console.log(e);
                        $("#action-update").dxSpeedDialAction({
                            index: 2, icon: "fas fa-edit", label: "Cập nhật thông tin",
                            visible: PermitInAction["update"],
                            onClick: () => e.component.editRow(data)
                        }).dxSpeedDialAction("instance");

                        $("#action-delete").dxSpeedDialAction({
                            index: 3, icon: "fas fa-trash", label: "Xóa",
                            visible: PermitInAction["delete"],
                            onClick: (e) => e.component.deleteRow(selectedRowKey),
                        }).dxSpeedDialAction("instance");

                        //$("#action-log").dxSpeedDialAction({
                        //    index: 4, icon: "fas fa-user", label: "Thêm người nhận",
                        //    onClick: () => {
                        //        loadAccount(selectedRowData);
                        //    }
                        //}).dxSpeedDialAction("instance");
                    }
                },
            });
        }
    </script>
}



@{
    ViewBag.Title = "TaiLieu";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="row">
    <div class="col-12">
        <div id="container" class="elevation-2"></div>
    </div>
</div>

@section script{
    <script>
        const ACTION = "/DocumentType";
        //const ACTION_NHOMCHIPHI = "/NS_NhomChiPhi";
        const ACTION_PROJECT = "/OperationProcess";
        var PROJECTID = isNullOrEmpty(localStorage.getItem("projectIdCurrent")) ? parseInt(localStorage.getItem("projectIdCurrent")) : 0;

        var WIDTH_CONTAINER = $("#container").width();

        let customStore = new DevExpress.data.CustomStore({
            key: "id",
            load: (values) => {
                console.log(values)
                let deferred = $.Deferred(), params = {};
                if (values.filter && values.filter[0] == "parentId") params['FindParentId'] = values.filter[2];
                if (values.sort) {
                    params['SortCol'] = values.sort[0].selector;
                    params['SortADSC'] = values.sort[0].desc;
                }
                params = { 'FindId': 'OperationProcessId,' + PROJECTID },
                $.ajax({
                    headers: header,
                    url: URL_API_PM_READ + ACTION,
                    dataType: "json",
                    data: params,
                    success: function (data) {
                        let list = data.result.items;
                        deferred.resolve(list);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log(xhr.responseJSON);
                        deferred.reject("Có lỗi xảy ra trong quá trình lấy danh sách. Mở Console để xem chi tiết.");
                    },
                    timeout: 10000//10 giây
                });

                return deferred.promise();
            },
            insert: (values) => ajax_insert(URL_API_ACC_CMD + ACTION, values),
            update: (key, values) => ajax_update(URL_API_ACC_CMD + ACTION, key, values),
            remove: (key) => ajax_delete(URL_API_ACC_CMD + ACTION, key),
        });


        let customStore_Projects = new DevExpress.data.CustomStore({
            key: "id", loadMode: "raw",
            load: (values) => {
                var deferred = $.Deferred();
                $.ajax({
                    headers: header, dataType: "json",
                    url: URL_API_ACC_READ + ACTION_PROJECT,
                    success: function (data) {
                        var list = data.result.items.filter(x => x.isActive == true && x.isVisible == true);
                        if (PROJECTID == 0) {
                            localStorage.setItem("projectIdCurrent", parseInt(list[0].id));
                            PROJECTID = parseInt(list[0].id)
                        }
                        deferred.resolve(list);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log(xhr.responseJSON);
                        deferred.reject("Có lỗi xảy ra trong quá trình lấy danh sách 'Projects'. Mở Console để xem chi tiết.");
                    },
                    timeout: 10000
                });
                return deferred.promise();
            },
        });

        $(function () {
            loadData(customStore);
        });

        //let loadData = (dataSource) => {
        //    $("#container").dxTreeList({
        //        height: heightScreen,
        //        dataSource: dataSource,
        //        repaintChangesOnly: true,
        //        remoteOperations: {
        //            filtering: true,
        //            sorting: true,
        //            grouping: false
        //        },
        //        cacheEnabled: true,
        //        scrolling: { mode: "standard" },
        //        rootValue: 0, parentIdExpr: "parentId", keyExpr: "id",
        //        showBorders: false, showColumnHeaders: true, showColumnLines: false, hoverStateEnabled: true,
        //        showRowLines: true, columnAutoWidth: true, wordWrapEnabled: true, rowAlternationEnabled: false,
        //        columns: [
        //            {
        //                dataField: "Title", caption: "Tên hạng mục",
        //                dataType: "string", width: (WIDTH_CONTAINER < 700) ? 200 : "100%",
        //            },
        //            {
        //                dataField: "Code", caption: "Ký Hiệu",
        //                dataType: "string", width: (WIDTH_CONTAINER < 700) ? 150 : "100%",
        //            },
        //            {
        //                dataField: "isActive", width: 100, alignment: "center",
        //                editorType: "dxSwitch",
        //            },
        //            {
        //                dataField: "isVisible", width: 100, alignment: "center",
        //                editorType: "dxSwitch",
        //            },
        //            {
        //                type: "buttons", caption: "Tác vụ",
        //                width: 120, alignment: "center",
        //                buttons: ["add", "edit", "delete"]
        //            }
        //        ],
        //        paging: {
        //            enabled: true,
        //            pageSize: 20
        //        },
        //        pager: {
        //            showPageSizeSelector: true,
        //            allowedPageSizes: [10, 20, 40],
        //            showInfo: true,
        //        },
        //        searchPanel: {
        //            highlightCaseSensitive: true,
        //            highlightSearchText: true,
        //            searchVisibleColumnsOnly: true,
        //            visible: WIDTH_CONTAINER > 350
        //        },
        //        editing: {
        //            allowAdding: true,
        //            allowUpdating: true,
        //            allowDeleting: true,
        //            mode: "cell",
        //            useIcons: false,
        //            confirmDelete: true,
        //        },
        //        onToolbarPreparing: function (e) {
        //            var container = e.component;
        //            e.toolbarOptions.items.unshift(
        //                {
        //                    location: "before", widget: "dxSelectBox",
        //                    options: {
        //                        dataSource: customStore_Projects,
        //                        valueExpr: "id", displayExpr: "title",
        //                        searchEnabled: true,
        //                        searchMode: "contains",
        //                        width: "100%",
        //                        showClearButton: false,
        //                        value: PROJECTID,
        //                        onValueChanged: function (data) {
        //                            PROJECTID = data.value;
        //                            localStorage.setItem('projectIdCurrent', PROJECTID);
        //                            loadData(customStore);
        //                        },
        //                    },
        //                },
        //                {
        //                    location: "after", widget: "dxButton",
        //                    options: {
        //                        icon: "refresh", tylingMode: "filled", type: "default",
        //                        onClick: () => container.refresh()
        //                    }
        //                })
        //        },
        //        onInitNewRow: (e) => {
        //            e.data.isActive = true;
        //            e.data.isVisible = true;
        //            e.data.ProjectId = PROJECTID;
        //        },
        //        onCellPrepared: (e) => {
        //            if (e.rowType == "data" && e.columnIndex == 0)
        //                e.cellElement.find('.dx-treelist-empty-space').toggleClass("dx-treelist-collapsed", e.data.chilCount > 0)
        //        }
        //    });
        //}

        let loadData = (dataSource) => {
            $("#container").dxTreeList({
                height: heightScreen,
                dataSource: dataSource,
                repaintChangesOnly: true,
                remoteOperations: {
                    filtering: true,
                    sorting: true,
                    grouping: false
                },
                scrolling: { mode: "standard" },
                rootValue: 0, parentIdExpr: "parentId", keyExpr: "id",
                showBorders: false, showColumnHeaders: true, showColumnLines: false, hoverStateEnabled: true,
                showRowLines: true, columnAutoWidth: true, wordWrapEnabled: true, rowAlternationEnabled: false,
                columns: [
                    {
                        dataField: "title", caption: "Tên hạng mục",
                        dataType: "string",
                    },
                    {
                        dataField: "code", caption: "Ký Hiệu",
                        dataType: "string",
                    },
                    {
                        dataField: "descriptions", caption: "Mô tả",
                        dataType: "string",
                    },
                    {
                        dataField: "status", caption: "Sắp xếp",
                        dataType: "number", width: 110, alignment: "center",
                        editorType: "dxNumberBox",
                        editorOptions: {
                            min: 1, step: 1, showSpinButtons: true,
                        }, sortOrder: "desc"
                    },
                    {
                        dataField: "isActive", width: 100, alignment: "center",
                        editorType: "dxSwitch",
                    },
                    {
                        dataField: "isVisible", width: 100, alignment: "center",
                        editorType: "dxSwitch",
                    },
                    {
                        type: "buttons", caption: "Tác vụ",
                        width: 120, alignment: "center",
                        buttons: ["add", "edit", "delete"]
                    }
                ],
                rowDragging: {
                    allowDropInsideItem: true,
                    allowReordering: false,
                    dropFeedbackMode: "push",
                    onDragEnd: function (e) {
                        var source = e.itemData,
                            target = e.component.getVisibleRows()[e.toIndex].data,
                            d = $.Deferred();
                        customStore.update(source.id, { parentId: (source.id != target.id) ? target.id : 0 }).then(() => {
                            e.component.refresh().then(d.resolve, d.reject);
                        }, d.reject);
                    },
                },
                paging: {
                    enabled: true,
                    pageSize: 20
                },
                pager: {
                    showPageSizeSelector: true,
                    allowedPageSizes: [10, 20, 40],
                    showInfo: true,
                },
                searchPanel: {
                    highlightCaseSensitive: true,
                    highlightSearchText: true,
                    searchVisibleColumnsOnly: true,
                    visible: WIDTH_CONTAINER > 350
                },
                editing: {
                    allowAdding: true,
                    allowUpdating: true,
                    allowDeleting: true,
                    mode: "cell",
                    useIcons: false,
                    confirmDelete: true,
                },
                onToolbarPreparing: function (e) {
                    var container = e.component;
                    e.toolbarOptions.items.unshift(
                        {
                            location: "before", widget: "dxSelectBox",
                            options: {
                                dataSource: customStore_Projects,
                                valueExpr: "id", displayExpr: "title",
                                searchEnabled: true,
                                searchMode: "contains",
                                width: "100%",
                                showClearButton: false,
                                value: PROJECTID,
                                onValueChanged: function (data) {
                                    PROJECTID = data.value;
                                    localStorage.setItem('projectIdCurrent', PROJECTID);
                                    loadData(customStore);
                                },
                            },
                        },
                        {
                            location: "after", widget: "dxButton",
                            options: {
                                icon: "refresh", tylingMode: "filled", type: "default",
                                onClick: () => container.refresh()
                            }
                        })
                },
                onInitNewRow: (e) => {
                    e.data.isActive = true;
                    e.data.isVisible = true;
                    e.data.ProjectId = PROJECTID;
                },
                onCellPrepared: (e) => {
                    if (e.rowType == "data" && e.columnIndex == 1)
                        e.cellElement.find('.dx-treelist-empty-space').toggleClass("dx-treelist-collapsed", e.data.chilCount > 0)
                }
            });
        }
    </script>
}



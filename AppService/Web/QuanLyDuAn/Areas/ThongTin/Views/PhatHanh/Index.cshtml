
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section style{   }
<div id="popup-main-upload"></div>
<div id="popup-register"></div>
<div class="row">
    <div class="col-12">
        <div id="container" class="elevation-2"></div>
        <div id="container-detail" class="elevation-2"></div>
    </div>
</div>

@section script{
    <script>
        var id = 1;
        ///----------------------------- ------------------------
        const ACTION = "/DocumentReleased";
        const ACTION_DOCUMENTTYPE = "/DocumentType";
        const ACTION_DOCUMENTACC = "/DocumentReleasedAccount";
        const ACTION_DOCUMENTLOG = "/DocumentReleasedLog";
        const ACTION_FILEGET = "/FilesAttachment/getBy";
        const ACTION_GROUPS = "/Groups";
        const ACTION_ACCOUNTINFO = "/ACCOUNTINFO";
        const ACTION_PROJECT = "/Projects";
        const ACTION_HANGMUC = "/WorkItems";
        var PROJECTID = isNullOrEmpty(localStorage.getItem("projectIdCurrent")) ? parseInt(localStorage.getItem("projectIdCurrent")) : 0;
        //var DOCUMENTTYPEID = isNullOrEmpty(localStorage.getItem("documentTypeIdCurrent")) ? parseInt(localStorage.getItem("documentTypeIdCurrent")) : 7;

        var WIDTH_CONTAINER = $("#container").width();



        //..........................Get data -------------------------------------------------------------
        let customStore = new DevExpress.data.CustomStore({
            key: "id",
            load: (values) => {
                let deferred = $.Deferred(), params = { 'FindId': 'projectId,' + PROJECTID };
                //if (values.filter && values.filter[0] == "parentId") params['FindParentId'] = values.filter[2];
                if (values.sort) {
                    params['SortCol'] = values.sort[0].selector;
                    params['SortADSC'] = values.sort[0].desc;
                    params['FindId'] = 'projectId,' + PROJECTID;
                }

                $.ajax({
                    headers: header,
                    url: URL_API_PM_READ + ACTION,
                    dataType: "json",
                    data: params,
                    success: function (data) {
                        let list = data.result.items;
                        deferred.resolve(list);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        deferred.reject("Có lỗi xảy ra trong quá trình lấy danh sách. Mở Console để xem chi tiết.");
                    },
                    timeout: 10000//10 giây
                });

                return deferred.promise();
            },
            insert: (values) => {
                values['tagWorkItem'] = (values['tagWorkItem'].join(',')).replace(/(?:\\[rn])+/g, "");
                ajax_insert(URL_API_PM_CMD + ACTION, values);
            },
            update: (key, values) => ajax_update(URL_API_PM_CMD + ACTION, key, values),
            remove: (key) => ajax_delete(URL_API_PM_CMD + ACTION, key),
        });
        let customStore_AccountInfo = new DevExpress.data.CustomStore({
            key: "accountId",
            load: (values) => {
                var deferred = $.Deferred();
                $.ajax({
                    headers: header, dataType: "json",
                    url: URL_API_PM_READ + ACTION_ACCOUNTINFO,
                    success: function (data) {
                        var list = data.result.items;
                        deferred.resolve(list);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log(xhr.responseJSON);
                        deferred.reject("Có lỗi xảy ra trong quá trình lấy danh sách 'Giai Đoạn'. Mở Console để xem chi tiết.");
                    },
                    timeout: 10000
                });
                return deferred.promise();
            },
        });
        let customStore_DocumetnType = new DevExpress.data.CustomStore({
            key: "id", loadMode: "raw",
            load: (values) => {
                var deferred = $.Deferred();
                $.ajax({
                    headers: header, dataType: "json",
                    url: URL_API_PM_READ + ACTION_DOCUMENTTYPE,
                    success: function (data) {
                        var list = data.result.items.filter(x => x.isActive == true && x.isVisible == true && x.status == 2);
                        deferred.resolve(list);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log(xhr.responseJSON);
                        deferred.reject("Có lỗi xảy ra trong quá trình lấy danh sách 'Giai Đoạn'. Mở Console để xem chi tiết.");
                    },
                    timeout: 10000
                });
                return deferred.promise();
            },
        });
        let customStore_File = (table, item) => new DevExpress.data.CustomStore({
            key: "id",
            load: (values) => {
                var deferred = $.Deferred();
                var params = {
                    'PageSize': isNullOrEmpty(values.take) ? values.take : 0,
                    'PageNumber': (isNullOrEmpty(values.take) && isNullOrEmpty(values.skip)) ? ((values.skip / values.take) + 1) : 0,
                    'FindParentId': table,
                    'FindId': item.id,
                }
                if (values.sort) {
                    params['SortCol'] = values.sort[0].selector;
                    params['SortADSC'] = values.sort[0].desc;
                }
                $.ajax({
                    headers: header, dataType: "json",
                    data: params,
                    url: URL_API_PM_READ + ACTION_FILEGET,
                    success: function (data) {
                        var list = data.result.items;
                        deferred.resolve(
                            list,
                            {
                                totalCount: list.length,
                            }
                        );
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log(xhr.responseJSON);
                        deferred.reject("Có lỗi xảy ra trong quá trình lấy danh sách 'Hạng mục'. Mở Console để xem chi tiết.");
                    },
                    timeout: 10000
                });
                return deferred.promise();
            },

        });
        let customStore_Detail = (item) => new DevExpress.data.CustomStore({
            key: "id",
            load: (values) => {
                console.log(item);
                var deferred = $.Deferred();
                var params = {
                    'PageSize': isNullOrEmpty(values.take) ? values.take : 0,
                    'PageNumber': (isNullOrEmpty(values.take) && isNullOrEmpty(values.skip)) ? ((values.skip / values.take) + 1) : 0,
                    'FindId': 'documentReleasedId,' + item.id
                }
                if (values.sort) {
                    params['SortCol'] = values.sort[0].selector;
                    params['SortADSC'] = values.sort[0].desc;
                }
                $.ajax({
                    headers: header, dataType: "json",
                    data: params,
                    url: URL_API_PM_READ + ACTION_DOCUMENTACC,
                    success: function (data) {
                        var list = data.result.items;
                        deferred.resolve(
                            list,
                            {
                                totalCount: list.length,
                            }
                        );
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log(xhr.responseJSON);
                        deferred.reject("Có lỗi xảy ra trong quá trình lấy danh sách 'Hạng mục'. Mở Console để xem chi tiết.");
                    },
                    timeout: 10000
                });
                return deferred.promise();
            },
            insert: (values) => ajax_insert(URL_API_PM_CMD + ACTION_DOCUMENTACC, values),
            update: (key, values) => ajax_update(URL_API_PM_CMD + ACTION_DOCUMENTACC, key, values),
            remove: (key) => ajax_delete(URL_API_PM_CMD + ACTION_DOCUMENTACC, key),
        });
        let customStore_Log = (item) => new DevExpress.data.CustomStore({
            key: "id",
            load: (values) => {
                console.log(item);
                var deferred = $.Deferred();
                var params = {
                    'PageSize': isNullOrEmpty(values.take) ? values.take : 0,
                    'PageNumber': (isNullOrEmpty(values.take) && isNullOrEmpty(values.skip)) ? ((values.skip / values.take) + 1) : 0,
                    'FindId': 'documentReleasedId,' + item.id
                }
                if (values.sort) {
                    params['SortCol'] = values.sort[0].selector;
                    params['SortADSC'] = values.sort[0].desc;
                }
                $.ajax({
                    headers: header, dataType: "json",
                    data: params,
                    url: URL_API_PM_READ + ACTION_DOCUMENTLOG,
                    success: function (data) {
                        var list = data.result.items;
                        deferred.resolve(
                            list,
                            {
                                totalCount: list.length,
                            }
                        );
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log(xhr.responseJSON);
                        deferred.reject("Có lỗi xảy ra trong quá trình lấy danh sách 'Hạng mục'. Mở Console để xem chi tiết.");
                    },
                    timeout: 10000
                });
                return deferred.promise();
            },

        });
        let customStore_Groups = new DevExpress.data.CustomStore({
            key: "id",
            load: (values) => {
                var deferred = $.Deferred();
                $.ajax({
                    headers: header, dataType: "json",
                    url: URL_API_ACC_READ + ACTION_GROUPS,
                    success: function (data) {
                        var list = data.result.items.filter(x => x.isActive == true && x.isVisible == true);
                        deferred.resolve(list);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log(xhr.responseJSON);
                        deferred.reject("Có lỗi xảy ra trong quá trình lấy danh sách 'Projects'. Mở Console để xem chi tiết.");
                    },
                    timeout: 10000
                });
                return deferred.promise();
            },
        });
        let customStore_HangMuc = new DevExpress.data.CustomStore({
            key: "id", loadMode: "raw",
            load: (values) => {
                var deferred = $.Deferred();
                $.ajax({
                    headers: header, dataType: "json",
                    url: URL_API_ACC_READ + ACTION_HANGMUC,
                    success: function (data) {
                        var list = data.result.items.filter(x => x.isActive == true && x.isVisible == true);
                        deferred.resolve(list);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log(xhr.responseJSON);
                        deferred.reject("Có lỗi xảy ra trong quá trình lấy danh sách 'Hạng mục'. Mở Console để xem chi tiết.");
                    },
                    timeout: 10000
                });
                return deferred.promise();
            },
        });
        let customStore_Projects = new DevExpress.data.CustomStore({
            key: "id", loadMode: "raw",
            load: (values) => {
                var deferred = $.Deferred();
                $.ajax({
                    headers: header, dataType: "json",
                    url: URL_API_PM_READ + ACTION_PROJECT,
                    success: function (data) {
                        var list = data.result.items.filter(x => x.isActive == true && x.isVisible == true);
                        if (PROJECTID == 0) {
                            localStorage.setItem("projectIdCurrent", parseInt(list[0].id));
                            PROJECTID = parseInt(list[0].id)
                        }
                        deferred.resolve(list);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log(xhr.responseJSON);
                        deferred.reject("Có lỗi xảy ra trong quá trình lấy danh sách 'Projects'. Mở Console để xem chi tiết.");
                    },
                    timeout: 10000
                });
                return deferred.promise();
            },
        });
        //..........................  Load View -------------------------------------------------------------
        $(function () {
            loadData();
        });
        let loadData = () => {
            $("#container").dxDataGrid({
                height: heightScreen,
                dataSource: customStore,
                remoteOperations: {
                    filtering: true,
                    sorting: true,
                    grouping: false
                },
                showBorders: false,
                showColumnHeaders: true,
                showColumnLines: false,
                hoverStateEnabled: true,
                showRowLines: true,
                columnAutoWidth: true,
                wordWrapEnabled: true,
                rowAlternationEnabled: true,
                columns: [
                    {
                        dataField: "title",
                        caption: "Tên tài liệu",
                        dataType: "string",
                    },
                    {
                        dataField: "documentTypeId",
                        caption: "Loại tài liệu",
                        dataType: "number",
                        lookup: {
                            dataSource: customStore_DocumetnType,
                            valueExpr: "id",
                            displayExpr: "title",
                        },
                        editorType: "dxLookup",
                        editorOptions: {
                            dataSource: customStore_DocumetnType,
                            valueExpr: "id", displayExpr: "title",
                            placeholder: "Vui lòng chọn...",
                            searchEnabled: true, showClearButton: true,
                            itemTemplate: function (data) {
                                return $("<div>").append($("<b>").append(data.code).addClass("mr-1"), $("<em>").append(data.title));
                            },
                        },
                        validationRules: [{ type: "required" }],
                    },
                    {
                        dataField: "description",
                        caption: "Mô tả",
                        dataType: "string",
                    },
                    {
                        dataField: "tagWorkItem",
                        caption: "Nhóm hạng mục",
                        dataType: "string",
                        //lookup: {
                        //    dataSource: customStore_HangMuc,
                        //    valueExpr: "id", displayExpr: "title",
                        //},
                        editCellTemplate: tagBoxEditorTemplate,
                        calculateFilterExpression: function (filterValue, selectedFilterOperation, target) {

                            if (target === "search" && typeof (filterValue) === "string") {
                                return [this.dataField, "contains", filterValue]
                            }
                            return function (data) {

                                return (data.tagWorkItem || []).indexOf(filterValue) !== -1
                            }
                        },
                        cellTemplate: (c, o) => {
                            c.append(o.text);
                        }
                    },
                    {
                        dataField: "noAttachment",
                        caption: "File đính kèm",
                        dataType: "number",
                        alignment: "left",
                        cellTemplate: (container, options) => {
                            container.append($('<a>').attr("href", "javaScript:void(0)").text(options.displayValue !== null ? options.displayValue + " fiels" : "chưa có file"));
                        },
                    },
                    {
                        dataField: "createDate",
                        caption: "Ngày phát hành",
                        dataType: "datetime",
                    },
                    //{
                    //    type: "buttons", caption: "Tác vụ",
                    //    width: 120, alignment: "center",
                    //    buttons: ["edit", "delete", {
                    //        hint: "Người nhận",
                    //        icon: "user",
                    //        onClick: function (e) {
                    //            loadAccount(e.row.data);
                    //        }
                    //    }],
                    //}
                ],
                paging: { enabled: true, pageSize: 20 },
                pager: {
                    showPageSizeSelector: true,
                    allowedPageSizes: [10, 20, 40],
                    showInfo: true,
                },
                searchPanel: {
                    highlightCaseSensitive: true,
                    highlightSearchText: true,
                    searchVisibleColumnsOnly: true,
                    visible: WIDTH_CONTAINER > 350
                },
                editing: {
                    //allowAdding: true,
                    //allowUpdating: true,
                    //allowDeleting: true,
                    mode: "popup",
                    useIcons: true,
                    confirmDelete: true,
                    popup: {
                        width: 600, height: "auto",
                        showTitle: true, title: "Trình duyệt",
                        closeOnOutsideClick: false, showCloseButton: true,
                    },
                    form: {
                        labelLocation: "left",
                        itemType: "group",
                        colCount: 12,
                        showRequiredMark: true,
                        requiredMark: "(*)",
                        items: [
                            {
                                colSpan: 12,
                                dataField: "title",
                                label: { text: "Tên" },
                            },
                            {
                                colSpan: 12,
                                dataField: "documentTypeId",
                                label: { text: "Loại tài liệu" },
                            },
                          
                            {
                                colSpan: 12,
                                dataField: "tagWorkItem",
                                label: { text: "Nhóm hạng mục" },
                                editorType: "dxTagBox",
                                editorOptions: {
                                    //dataSource: customStore_HangMuc,
                                    //displayExpr: "title",
                                    //valueExpr: "title",
                                    //maxDisplayedTags: 3,
                                    //showSelectionControls: true,
                                    //itemTemplate: function (data) {
                                    //    return "<div>" + data.title + "</div>";
                                    //}
                                },
                            },
                            {
                                colSpan: 12,
                                dataField: "description",
                                label: { text: "Mô tả" },
                                editorType: "dxTextArea",
                            },
                          
                        ],
                    },
                },
                onToolbarPreparing: function (e) {
                    var container = e.component;
                    e.toolbarOptions.items.unshift(
                        {
                            location: "before",
                            widget: "dxSelectBox",
                            options: {
                                dataSource: customStore_Projects,
                                valueExpr: "id",
                                displayExpr: "title",
                                searchEnabled: true,
                                searchMode: "contains",
                                width: "100%",
                                showClearButton: false,
                                value: PROJECTID,
                                onValueChanged: function (data) {
                                    PROJECTID = data.value;
                                    localStorage.setItem('projectIdCurrent', PROJECTID);
                                    loadData(customStore);
                                },
                            },
                        },
                        {
                            location: "after",
                            widget: "dxButton",
                            options: {
                                icon: "refresh",
                                stylingMode: "filled",
                                type: "default",
                                onClick: () => container.refresh()
                            }
                        },
                    )
                },
                onInitNewRow: (e) => {
                    e.data.isActive = true;
                    e.data.isVisible = true;
                    e.data.projectId = PROJECTID;
                },
                onCellPrepared: (e) => {
                    if (e.rowType == "data" && e.columnIndex == 1)
                        e.cellElement.find('.dx-treelist-empty-space').toggleClass("dx-treelist-collapsed", e.data.chilCount > 0)
                },
                onCellClick: function (e) {
                    if (e.column.dataField === "noAttachment") {
                        loadUpload("DocumentReleased", e.row.data, false);
                    }
                },
                masterDetail: {
                    autoExpandAll: false,
                    component: null,
                    enabled: true,
                    render: null,
                    template: function (container, options) {
                        $("<div>").dxDataGrid({
                            showBorders: false,
                            showColumnHeaders: false,
                            showColumnLines: false,
                            hoverStateEnabled: true,
                            showRowLines: true,
                            columnAutoWidth: true,
                            wordWrapEnabled: true,
                            rowAlternationEnabled: true,
                            columnAutoWidth: true,
                            showBorders: true,
                            dataSource: customStore_Log(options.data),
                            columns: [
                                //{
                                //    dataField: "accountId",
                                //    caption: "Ảnh đại diện",
                                //    alignment: "center",
                                //    dataType: "number",
                                //    allowEditing: false,
                                //    lookup: {
                                //        dataSource: customStore_AccountInfo,
                                //        valueExpr: "accountId", displayExpr: "avatarImg",
                                //    },
                                //    cellTemplate: (c, o) => {

                                //        $("<img />")
                                //            .attr("src", "data:image/png;base64," + o.text)
                                //            .addClass("img-circle elevation-2 img-size-30")
                                //            .attr("onerror", "this.onerror=null;this.src='https://qlcv.tayho.com.vn/Content/user-avartar/avartar-default.jpg';")
                                //            .appendTo(c);

                                //    },
                                //},//avarta
                                {
                                    dataField: "accountId",
                                    caption: "Họ Tên",
                                    dataType: "string",
                                    alignment: "center",
                                    dataType: "number",
                                    lookup: {
                                        dataSource: customStore_AccountInfo,
                                        valueExpr: "accountId", displayExpr: "userName",
                                    },
                                },//account
                                {
                                    dataField: "note",
                                    caption: "Ghi chú",
                                    dataType: "string",
                                    alignment: "center",
                                    dataType: "string",

                                },//note
                                {
                                    dataField: "status",
                                    caption: "Trạng thái",
                                    alignment: "center",
                                    dataType: "number",
                                    cellTemplate: (container, options) => {
                                        container
                                            .attr('id', "popover-target-" + options.key)
                                            .append(options.value == 0 ? 'Chờ gửi' : options.value == 1 ? 'Đã gửi' : options.value == 2 ? 'Đã xem' : options.value == 3 ? 'Đã phản hồi' : '')
                                            .addClass(options.value == 0 ? 'text-danger font-weight-bold' : options.value == 1 ? 'text-success font-weight-bold' : options.value == 2 ? 'text-primary font-weight-bold' : options.value == 3 ? 'text-info font-weight-bold' : '');
                                        $("<div />")
                                            .attr('id', "popover-detail-" + options.key)
                                            .append("<div>( " + (options.value == 0 ? 'Chờ gửi' : options.value == 1 ? 'Đã gửi' : options.value == 2 ? 'Đã xem' : options.value == 3 ? 'Đã phản hồi' : '') + ' ' + moment(options.data.createDate).locale("vi").fromNow() + ")" + "</div>")
                                            .appendTo(container);
                                        $("#popover-detail-" + options.key).dxPopover({
                                            target: "#popover-target-" + options.key,
                                            showEvent: "mouseenter", hideEvent: "mouseleave",
                                            position: "bottom",
                                            animation: {
                                                show: { type: "pop", from: { scale: 0 }, to: { scale: 1 } },
                                                hide: { type: "fade", from: 1, to: 0 },
                                            }
                                        });
                                    },
                                },//status
                                //{
                                //    caption: "Ngày gửi",
                                //    alignment: "center",
                                //    dataType: "date",
                                //    cellTemplate: (container, options) => {
                                //        if (options.data.updateDate != null)
                                //            container
                                //                .append(moment(options.data.updateDate).locale('vi').fromNow());
                                //        else
                                //            container
                                //                .append(moment(options.data.createDate).locale('vi').fromNow());
                                //    },

                                //},//status
                            ],
                        }).attr("style", "margin:auto; width:90%").appendTo(container);
                    },
                    onContentReady: (e) => {
                        e.component;
                    },
                },
                selection: {
                    mode: "single"
                },
                onContentReady: (e) => {
                    var container = e.component;
                    $("#action-add").dxSpeedDialAction({
                        index: 1, icon: "fas fa-plus",
                        label: "Thêm mới",
                        visible: PermitInAction["insert"],
                        onClick: () => {
                            console.log('abc');
                            callPopup(
                                "THÊM MỚI PHÁT HÀNH",
                                "/ThongTin/PhatHanh/_PhatHanhCreate",
                                ($(window).width() > 767 ? "50%" : "80%"),
                                container
                            );
                        }
                    }).dxSpeedDialAction("instance");

                    DevExpress.config({
                        floatingActionButtonConfig: {
                            icon: "rowfield",
                            label: "Tác vụ",
                            shading: true,
                            position: {
                                of: e.element,
                                my: "right bottom",
                                at: "right bottom",
                                offset: e.component.pageCount() > 1 ? "-15 -60" : "-15 -15"
                            }
                        }
                    });
                    DevExpress.ui.repaintFloatingActionButton();
                },
                onSelectionChanged: (e) => {
                    var selectedRowData = e.selectedRowsData[0];
                    var selectedRowKey = e.selectedRowKeys[0]; 
                    if (selectedRowData != null && selectedRowKey != null) {
                        var data = e.component.getRowIndexByKey(selectedRowKey);

                        $("#action-update").dxSpeedDialAction({
                            index: 2, icon: "fas fa-edit", label: "Cập nhật thông tin",
                            visible: PermitInAction["update"],
                            onClick: () => e.component.editRow(data)
                        }).dxSpeedDialAction("instance");

                        //$("#action-delete").dxSpeedDialAction({
                        //    index: 3, icon: "fas fa-trash", label: "Xóa",
                        //    visible: PermitInAction["delete"],
                        //    onClick: (e) => e.component.deleteRow(data)
                        //}).dxSpeedDialAction("instance");

                        $("#action-log").dxSpeedDialAction({
                            index: 4, icon: "fas fa-user", label: "Thêm người nhận",
                            onClick: () => {
                                loadAccount(selectedRowData);
                            }
                        }).dxSpeedDialAction("instance");
                    }
                },
            });
        };

        let loadUpload = (table, item, isUpload) => $("#popup-main-upload").dxPopup({
            width: "70%",
            height: "50%",
            fullScreen: false,
            dragEnabled: true,
            resizeEnabled: true,
            showTitle: true,
            title: item.title && item.title.toUpperCase(),
            showCloseButton: true, closeOnOutsideClick: true,
            visible: true,
            //elementAttr: {
            //    class: "popup-priority-2",
            //},
            contentTemplate: (c) => {
                var scrollView = $("<div id='scrollView'></div>");
                var content = $("<div/>");
                var content_Upload = $("<form />").attr("method", "POST").attr("enctype", "multipart/form-data").attr("id", "form").append('<div id = "fileuploader-container" ><div id="file-uploader"></div></div ><div id="button"></div>');
                content.dxDataGrid({
                    dataSource: customStore_File(table, item),
                    remoteOperations: {
                        paging: true,
                        sorting: true,
                    },
                    repaintChangesOnly: true,
                    showBorders: true,
                    showColumnHeaders: true,
                    showColumnLines: false,
                    hoverStateEnabled: true,
                    showRowLines: true,
                    columnAutoWidth: true,
                    wordWrapEnabled: true,
                    wordWrapEnabled: true,
                    rowAlternationEnabled: true,
                    paging: {
                        enabled: true,
                        pageSize: 20
                    },
                    pager: {
                        showPageSizeSelector: true,
                        allowedPageSizes: [10, 20, 40],
                        showInfo: true,

                    },
                    columns: [
                        {
                            caption: "STT", alignment: "center",
                            cellTemplate: (c, o) => $("<div/>").append(o.rowIndex + 1).appendTo(c),
                            width: '10%',
                        },
                        {
                            dataField: "fileName",
                            caption: "Tên file",
                            dataType: "string",
                            width: '50%',
                        },//rev
                        {
                            caption: "File",
                            dataType: "string",
                            cellTemplate: (c, o) => {
                                var x = (o.data.host + "\\" + o.data.url + "\\" + o.data.fileName).replaceAll('/', '\\');
                                if (!x.includes('null'))
                                    if (['.png', '.jpg', '.jpge'].includes(o.data.tail.toLowerCase(x))) {

                                        $("<a/>").append($("<img/>").attr("src", x).attr("style", "max-width :150px;").attr("onerror", "this.onerror=null;this.src='https://qlcv.tayho.com.vn/Content/user-avartar/avartar-default.jpg';")).appendTo(c);
                                    }
                                    else if (['.pdf'].includes(o.data.tail.toLowerCase(x))) {
                                        $("<a/>").attr("href", x).addClass("far fa-file-pdf").appendTo(c);
                                    }
                                    else {
                                    }
                            },
                        }, //url
                    ],
                    editing: {
                        mode: "batch",
                        allowAdding: false,
                        allowDeleting: false,
                        allowUpdating: false,
                    },
                    onToolbarPreparing: (e) => {
                        var container = e.component;
                        e.toolbarOptions.items.unshift(
                            {
                                location: "after", widget: "dxButton",
                                options: {
                                    icon: "refresh", type: "default",
                                    onClick: () => container.refresh()
                                }
                            })
                    },
                });
                scrollView.append(content, content_Upload);
                scrollView.dxScrollView({
                    width: '100%',
                    height: '100%'
                });
                $(function () {
                    if (isUpload) {
                        //$("#form").append("OwnerById",1);
                        $("#file-uploader").dxFileUploader({
                            selectButtonText: "Select photo",
                            multiple: true,
                            //labelText: "",
                            accept: "*",
                            uploadMode: "useForm",
                        });

                        $("#button").dxButton({
                            text: "Update profile",
                            type: "success",
                            onClick: function () {
                                var fd = $("#form")[0];
                                var formData = new FormData(fd);
                                formData.append("OwnerById", item.id);
                                if ('code' in item) {
                                    formData.append("Code", item.code);
                                }
                                else {
                                    formData.append("Code", item.title);
                                }
                                formData.append("OwnerByTable", table);
                                $.ajax({
                                    url: 'https://api-pm-cmd.tayho.com.vn/api/cmd/v1/FilesAttachment/UploadFile',
                                    type: 'POST',
                                    data: formData,
                                    success: function (data) {
                                        $('.dx-fileuploader-file-status-message').empty();
                                        $('.dx-fileuploader-file-status-message').html('Đã up thành công!');
                                    },
                                    cache: false,
                                    contentType: false,
                                    processData: false,
                                });
                            }
                        });
                    }

                });
                c.append(scrollView);
                return c;
            },
            //onHidden: (c) => {
            //    $("#dxDataGrid_detail").dxDataGrid('instance').refresh();
            //},
        }).addClass("popup-priority-2");
        let loadAccount = (item) => $("#popup-main-upload").dxPopup({
            width: "50%",
            height: "50%",
            fullScreen: false,
            dragEnabled: true,
            resizeEnabled: true,
            showTitle: true,
            title: 'Cài đặt người nhận phát hành',
            showCloseButton: true, closeOnOutsideClick: true,
            visible: true,
            contentTemplate: (c) => {
                var scrollView = $("<div id='scrollView-detail'></div>");
                var content = $("<div/>");
                var d = $.Deferred();
                content.dxDataGrid({
                    elementAttr: {
                        id: "dxDataGrid_detail"
                    },
                    dataSource: customStore_Detail(item),
                    remoteOperations: {
                        paging: true,
                        sorting: true,
                    },
                    repaintChangesOnly: true,
                    showBorders: true,
                    showColumnHeaders: true,
                    showColumnLines: false,
                    hoverStateEnabled: true,
                    showRowLines: true,
                    columnAutoWidth: true,
                    wordWrapEnabled: true,
                    rowAlternationEnabled: true,
                    paging: {
                        enabled: true,
                        pageSize: 20
                    },
                    pager: {
                        showPageSizeSelector: true,
                        allowedPageSizes: [10, 20, 40],
                        showInfo: true,
                    },
                    columns: [
                        {
                            caption: "STT",
                            alignment: "center",
                            cellTemplate: (c, o) => $("<div/>").append(o.rowIndex + 1).appendTo(c),
                        },
                        //{
                        //    dataField: "accountId",
                        //    caption: "Ảnh đại diện",
                        //    alignment: "center",
                        //    dataType: "number",
                        //    allowEditing: false,
                        //    lookup: {
                        //        dataSource: customStore_AccountInfo,
                        //        valueExpr: "accountId", displayExpr: "avatarImg",
                        //    },
                        //    cellTemplate: (c, o) => {
                        //        $("<img />").attr("src", "data:image/png;base64," + o.text).addClass("img-circle elevation-2 img-size-30").attr("onerror", "this.onerror=null;this.src='https://qlcv.tayho.com.vn/Content/user-avartar/avartar-default.jpg';").appendTo(c);
                        //    },
                        //},
                        {
                            dataField: "accountId",
                            caption: "Họ Tên",
                            alignment: "center",
                            //dataType: "number",
                            lookup: {
                                dataSource: customStore_AccountInfo,
                                valueExpr: "accountId", displayExpr: "userName",
                            },

                        },//account
                        {
                            dataField: "groupId",
                            caption: "Nhóm",
                            alignment: "center",
                            //dataType: "number",
                            lookup: {
                                dataSource: customStore_Groups,
                                valueExpr: "id", displayExpr: "title",
                            },

                        },//nhóm
                        {
                            dataField: "isActive",
                            width: 100,
                            alignment: "center",
                            editorType: "dxSwitch",
                        },
                        {
                            dataField: "isVisible",
                            width: 100,
                            alignment: "center",
                            editorType: "dxSwitch",
                        },
                    ],
                    editing: {
                        mode: "popup",
                        allowAdding: true,
                        allowDeleting: true,
                        allowUpdating: true,
                        popup: {
                            width: 600, height: "auto",
                            showTitle: true, title: "Trình duyệt",
                            closeOnOutsideClick: false,
                            showCloseButton: true,
                        },
                        form: {
                            labelLocation: "left",
                            itemType: "group",
                            colCount: 12,
                            showRequiredMark: true,
                            requiredMark: "(*)",
                            items: [
                                {
                                    colSpan: 12,
                                    dataField: "groupId",
                                    editorType: "dxSelectBox",
                                    editorOptions: {
                                        elementAttr: {
                                            id: "groupIdSelect",
                                        },
                                        placeholder: "Vui lòng chọn...",
                                        searchEnabled: true,
                                        showClearButton: true,
                                        itemTemplate: function (data) {
                                            return $("<div>").append($("<b>").append(data.title).addClass("mr-1"), $("<em>").append(data.descriptions));
                                        },
                                        validationRules: [{
                                            type: "async",
                                            message: "Đã có thông tin Nhóm",
                                            validationCallback: function (params) {
                                                var d = $.Deferred();
                                                d.resolve(!(typeof $('#accountIdSelect').dxSelectBox('instance').option('value') === 'number'));
                                                //$('#groupIdSelect').dxSelectBox('instance').option('value', null)
                                                return d.promise();
                                                /*sendRequest(params.value);*/
                                            }
                                        }]
                                        //onValueChanged: function (e) {
                                        //    //if (data.value != null) {
                                        //    //    $('#accountIdSelect').dxSelectBox('instance').option('disabled', data.value != null);
                                        //    //}
                                        //    //else {
                                        //    //    $('#accountIdSelect').dxSelectBox('instance').option('disabled', null);
                                        //    //};
                                        //},
                                    },
                                },
                                {
                                    colSpan: 12,
                                    dataField: "accountId",
                                    editorType: "dxSelectBox",
                                    editorOptions: {
                                        elementAttr: {
                                            id: "accountIdSelect",
                                        },
                                        placeholder: "Vui lòng chọn...",
                                        searchEnabled: true,
                                        showClearButton: true,
                                        itemTemplate: function (data) {
                                            return $("<div>").append($("<b>").append(data.userName).addClass("mr-1"), $("<em>").append(data.accountName));
                                        },
                                        //onValueChanged: function (data) {

                                        //    if (data.value != null) {
                                        //        $('#groupIdSelect').dxSelectBox('instance').option('disabled', data.value != null);
                                        //    }
                                        //    else {
                                        //        $('#groupIdSelect').dxSelectBox('instance').option('disabled', null);
                                        //    };
                                        //},
                                    },
                                    validationRules: [{
                                        type: "async",
                                        message: "Đã có thông tin Nhóm",
                                        validationCallback: function (params) {
                                            console.log(params);
                                            var d = $.Deferred();
                                            d.resolve(!((typeof $('#accountIdSelect').dxSelectBox('instance').option('value') === 'number') && (typeof $('#groupIdSelect').dxSelectBox('instance').option('value') === 'number')));
                                            //$('#accountIdSelect').dxSelectBox('instance').option('value',null)
                                            return d.promise();
                                            /*sendRequest(params.value);*/
                                        }
                                    }]
                                },

                                {
                                    colSpan: 6,
                                    dataField: "isActive",
                                    alignment: "center",
                                    editorType: "dxSwitch",
                                },
                                {
                                    colSpan: 6,
                                    dataField: "isVisible",
                                    alignment: "center",
                                    editorType: "dxSwitch",
                                },
                            ],
                        },
                    },
                    onCellClick: function (e) {
                        if (e.column.dataField === "noAttachment") {
                            loadUpload("RequestRegist", e.row.data, false);
                        }
                    },
                    onInitNewRow: (e) => {
                        e.data.documentReleasedId = item.id;
                        e.data.isActive = true;
                        e.data.isVisible = true;
                    },
                    onEditorPreparing: function (e) {
                        if (e.parentType === "dataRow" && e.dataField !== "accountId") {
                            return;
                        }
                        if (!e.row.isNewRow)
                            e.editorOptions.disabled = true;
                    },
                });
                scrollView.append(content);
                scrollView.dxScrollView({
                    width: '100%',
                    height: '100%'
                });
                c.append(scrollView);
                return c;
            }
        });

        function callPopup(title, url, width, container) {

            var isFullscreen = false;
            if (width == "100%") isFullscreen = true;

            $("#popup-register").dxPopup({
                width: width, height: "auto",
                fullScreen: isFullscreen,
                position: { my: 'top', at: 'top', of: window },
                dragEnabled: true,
                resizeEnabled: true,
                visible: true,
                showTitle: true,
                closeOnOutsideClick: false,
                showCloseButton: true,
                title: title,
                contentTemplate: function (container) {
                    var scrollView = $("<div id='scrollView'></div>");
                    var content = $("<div/>");
                    content.load(url);
                    scrollView.append(content);
                    scrollView.dxScrollView({
                        width: '100%',
                        height: '100%'
                    });
                    container.append(scrollView);
                    return container;
                },
                onHiding: function () {
                    container.refresh();
                },
                onHidden: function () {
                    loadData();
                }
            });
        };
        // ---------------------------------- Tag Custom --------------------------------
        function tagBoxEditorTemplate(cellElement, cellInfo) {
            return $("<div>").dxTagBox({
                dataSource: customStore_HangMuc,
                value: (cellInfo.value != null ? cellInfo.value.split(",") : "" || []).map(function (element) { return element }),
                valueExpr: "title", displayExpr: "title",
                showSelectionControls: true,
                applyValueMode: "useButtons",
                searchEnabled: true,
                onValueChanged: function (e) {
                    cellInfo.setValue(e.value.join(','));
                },
                onSelectionChanged: function (e) {
                    cellInfo.component.updateDimensions();
                },
            });
        };

    </script>
}




<form id="form-regist" action="#" method="POST" enctype="multipart/form-data">
</form>

<script>
    var formData = {
        "planRegisterId": ""
        , "documentTypeId": ""
        , "workItemId": ""
        , "title": ""
        , "descriptions": ""
        , "note": ""
    };
    var fdata = new FormData();
    var fdatatest = new FormData();
    fdatatest.append('projectId', 1);
    fdatatest.append('planRegisterId', 2);
    fdatatest.append('documentTypeId', 1);
    fdatatest.append('workItemId', 1);
    fdatatest.append('title', '123');
    fdatatest.append('descriptions', '456');
    fdatatest.append('note', 'test');
    function acb() { alert('fuck') };

   
    $(document).ready(function () {

    
        $("#form-regist").dxForm({
            formData: formData,
            labelLocation: "top",
            items: [
                {
                    itemType: "group",
                    colCount: 12,
                    items: [
                        {
                            colSpan: 12,
                            dataField: "planRegisterId",
                            label: { text: "Kế hoạch" },
                            lookup: {
                                dataSource: customStore_PLAN(""),
                                valueExpr: "id", displayExpr: "title",
                            },
                            editorType: "dxSelectBox",
                            editorOptions: {
                                value: formData["planRegisterId"],
                                searchMode: "contains",
                                searchExpr: ['code', 'title'],
                                showClearButton: true,
                                dataSource: customStore_PLAN(""),
                                valueExpr: "id", displayExpr: "code",
                                placeholder: "Vui lòng chọn...",
                                searchEnabled: true, showClearButton: true,
                                itemTemplate: function (data) {
                                    return $("<div>").append($("<b>").append(data.code).addClass("mr-1"), $("<em>").append(data.title));
                                },
                                onValueChanged: function (data) {
                                    /////// loại tài liệu
                                    $('#elementDocumentTypeId').dxSelectBox('instance')
                                        .option('disabled', data.value != null);
                                    if (data.value != null) {
                                        customStore_PLAN(data.value).load().then((rs) => {
                                            $('#elementDocumentTypeId').dxSelectBox('instance')
                                                .option('value', rs[0].documentTypeId == null ? 0 : rs[0].documentTypeId);
                                        });
                                    }
                                    else {
                                        $('#elementDocumentTypeId').dxSelectBox('instance')
                                            .option('value', null);
                                    };

                                    ///////// Hạng mục
                                    $('#elementHangMucId').dxSelectBox('instance')
                                        .option('disabled', data.value != null);
                                    if (data.value != null) {
                                        customStore_PLAN(data.value).load().then((rs) => {
                                            $('#elementHangMucId').dxSelectBox('instance')
                                                .option('value', rs[0].workItemId == null ? 0 : rs[0].workItemId);
                                        });
                                    }
                                    else {
                                        $('#elementHangMucId').dxSelectBox('instance')
                                            .option('value', null);
                                    };
                                    ///////// Tiêu đề
                                    if (data.value != null) {
                                        customStore_PLAN(data.value).load().then((rs) => {
                                            $('#elementTitle').dxTextBox('instance')
                                                .option('value', rs[0].title == null ? 0 : rs[0].title);
                                        });
                                    }
                                    else {
                                        $('#elementTitle').dxTextBox('instance')
                                            .option('value', null);
                                    };

                                },
                            },
                        },
                        {
                            colSpan: 12,
                            dataField: "documentTypeId",
                            label: { text: "Loại tài liệu" },
                            lookup: {
                                dataSource: customStore_DocumetnType,
                                valueExpr: "id",
                                displayExpr: "title",
                            },
                            editorType: "dxSelectBox",
                            editorOptions: {
                                value: formData["documentTypeId"],
                                dataSource: customStore_DocumetnType,
                                valueExpr: "id", displayExpr: "title",
                                elementAttr: {
                                    id: "elementDocumentTypeId",
                                }
                            },

                        },
                        {
                            colSpan: 12,
                            dataField: "workItemId",
                            label: { text: "Loại tài liệu" },
                            lookup: {
                                dataSource: customStore_HangMuc,
                                valueExpr: "id",
                                displayExpr: "title",
                            },
                            editorType: "dxSelectBox",
                            editorOptions: {
                                value: formData["workItemId"],
                                dataSource: customStore_HangMuc,
                                valueExpr: "id",
                                displayExpr: "title",
                                elementAttr: {
                                    id: "elementHangMucId",
                                }
                            },
                        },
                        {
                            colSpan: 12,
                            dataField: "title",
                            label: { text: "Tiêu đề" },
                            editorType: "dxTextBox",
                            editorOptions: {
                                value: formData["title"],
                                dataSource: customStore_HangMuc,
                                valueExpr: "id",
                                displayExpr: "title",
                                elementAttr: {
                                    id: "elementTitle",
                                }
                            },
                        },
                        {
                            colSpan: 12,
                            dataField: "descriptions",
                            label: { text: "Mô tả" },
                            editorType: "dxTextArea",
                            editorOptions: {
                                value: formData["descriptions"],
                            },
                        },
                        {
                            colSpan: 12,
                            dataField: "note",
                            label: { text: "Ghi chú" },
                            editorOptions: {
                                value: formData["descriptions"],
                            },
                        },
                        {

                            colSpan: 12,
                            template: '<span class="dx-field-item-label-text font-bold">Các tập tin đính kèm</span><div class="file-uploader"></div>',

                        },
                    ]
                },
                {
                    itemType: "button",
                    horizontalAlignment: "center",
                    buttonOptions: {
                        text: "Lưu lại",
                        icon: "fa fa-save",
                        type: "success",
                        useSubmitBehavior: true,
                        elementAttr: {
                            id: "submit",
                        }
                    }
                },
                {
                    itemType: "button",
                    horizontalAlignment: "center",
                    buttonOptions: {
                        text: "test lại",
                        icon: "fa fa-save",
                        type: "button",
                        useSubmitBehavior: false,
                        elementAttr: {
                            id: "test3",
                        }
                    }
                }
            ]
        });

        $(".file-uploader").dxFileUploader({
            selectButtonText: "Chọn tập tin...",
            labelText: "Hoặc kéo thả vào đây",
            showFileList: true,
            multiple: true,
            uploadMode: "useForm",
            allowedFileExtensions: [".jpg", ".jpeg", ".png", ".pdf", ".doc", ".docx", ".xls", ".xlsx", ".xlsm"],
            maxFileSize: 10000000,
        });
        $("#test3").on("click", function (e) {
            test(fdatatest);
            //e.preventDefault();

            //var i = 10;
            //$.each(formData, function (key, value) {
            //    alert(i++);
            //    console.log(key);
            //    console.log(value);
            //    fdata.append(key, value);
            //    console.log(fdata);
            //});
            //console.log(PROJECTID);
            //fdata.append('projectId', PROJECTID);
            //for (var pair of fdata.entries()) {
            //    console.log(pair[0] + ', ' + pair[1]);
            //}
            //$("#popup-register").dxPopup("toggle", false);
            $("#popup-register").dxPopup("instance").hide();  

            //var files = $(".file-uploader").dxFileUploader("instance").option("value");
            //if (files.length > 0) {
            //    $.each(files, function (key, value) {
            //        console.log(key);
            //        console.log(value);
            //        fdata.append(files[key].name, files[key]);
            //    });
            //}
            //loadingPanel.show();
            //var FORMDATA = new FormData();
            //$.each(formData, function (key, value) {
            //    FORMDATA.append(key, value);
            //});

            //var files = $(".file-uploader").dxFileUploader("instance").option("value");
            //if (files.length > 0) {
            //    $.each(files, function (key, value) {
            //        FORMDATA.append(files[key].name, files[key]);
            //    });
            //}


            //$.ajax({
            //    url: 'https://api-pm-cmd.tayho.com.vn/api/cmd/v1/RequestRegist',
            //    type: "POST",
            //    enctype: 'multipart/form-data',
            //    data: fdata,
            //    processData: false,  // Important!
            //    contentType: false,
            //    cache: false,
            //    beforeSend: function (data) {
            //        alert(2.5);
            //        console.log(data);
            //    },
            //    success:function(data) {

            //        $("#result").text(data);
            //        console.log("SUCCESS : ", data);
            //        $("#btnSubmit").prop("disabled", false);

            //    },
            //    error: function (e) {

            //        $("#result").text(e.responseText);
            //        console.log("ERROR : ", e);
            //        $("#btnSubmit").prop("disabled", false);

            //    }
            //});
            //return deferred.promise();
        });

    });


</script>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section style{

    <style>
        .long-title h3 {
            font-family: 'Segoe UI Light', 'Helvetica Neue Light', 'Segoe UI', 'Helvetica Neue', 'Trebuchet MS', Verdana;
            font-weight: 200;
            font-size: 28px;
            text-align: center;
            margin-bottom: 20px;
        }

        .dx-form-group-caption {
            font-size: 25px;
        }


        .popup-priority-1 {
            z-index: 1501;
        }

        .popup-priority-2 {
            z-index: 1503;
        }

        #popup-main {
        }

            #popup-main > .dx-overlay-wrapper {
                z-index: 1500 !important;
            }

        /*   #popup-main .dx-overlay-wrapper .dx-popup-wrapper .dx-overlay-modal .dx-overlay-shader {
            z-index: 1501 !important;
        }*/
        .dx-overlay-wrapper .dx-popup-wrapper .dx-overlay-modal .dx-overlay-shader {
            z-index: 1600 !important;
        }
    </style>
}
<div id="popup-main-upload"></div>
<div id="popup-main-sub"></div>
<div id="popup-register"></div>


<div class="row">
    <div class="col-12">
        <div id="container" class="elevation-2"></div>
        @*<div id="popup-main"></div>*@
    </div>
</div>

@section script{
    <script src="~/Scripts/page/thongtin.js"></script>
    <script>
        const ACTION = "/RequestRegist/GetByAccountID";
        const ACTION_DETAIL = "/RequestRegist/GetDetail";
        const ACTION_RESPONSEBYACC = "/ResponseRegist/getByAccount";
        const ACTION_READ_PLAN = "/PlanRegister/GetByContractorID";
        const ACTION_RESPONSE = "/ResponseRegist";
        const ACTION_FILEGET = "/FilesAttachment/getBy";
        const ACTION_CMD = "/RequestRegist";
        const ACTION_PROJECT = "/Projects";
        const ACTION_HANGMUC = "/WorkItems";
        const ACTION_DOCUMENTTYPE = "/DocumentType";
        const ACTION_REPLY = "/ResponseRegistReply";
        const ACTION_ACCOUNTINFO = "/ACCOUNTINFO";
        var code = "";

        var PROJECTID = isNullOrEmpty(localStorage.getItem("projectIdCurrent")) ? parseInt(localStorage.getItem("projectIdCurrent")) : 1;
        var WIDTH_CONTAINER = $("#container").width();
        let customStore = customStore_CMD_READ_WITHPROJECTID_PAGGING(ACTION_CMD_REQUESTREGIST, ACTION_READ_REQUESTREGISTBYACC);
        let customStore_Projects = customStore_READ_ALL_ACC(ACTION_READ_PROJECT);
        let customStore_PLAN = (id) => customStore_READ_ID(ACTION_READ_PLAN, id);
        let customStore_HangMuc = customStore_READ_ALL_ACC(ACTION_READ_HANGMUC);
        let customStore_DocumetnType = customStore_READ_FILTER(ACTION_READ_DOCUMENTTYPE, 'status,1');
        let customStore_Detail = (id) => customStore_UPDATE_READ(id, ACTION_CMD_RESPONSEREGIST, ACTION_READ_REQUESTREGISTDETAIL);
        let customStore_Response = (id) => customStore_UPDATE_READ(id, ACTION_RESPONSE, ACTION_RESPONSEBYACC)

        let customStore_File = (table, item) => new DevExpress.data.CustomStore({
            key: "id",
            load: (values) => {
                var deferred = $.Deferred();
                var params = {
                    'PageSize': isNullOrEmpty(values.take) ? values.take : 0,
                    'PageNumber': (isNullOrEmpty(values.take) && isNullOrEmpty(values.skip)) ? ((values.skip / values.take) + 1) : 0,
                    'FindParentId': table,
                    'FindId': item.id,
                }
                if (values.sort) {
                    params['SortCol'] = values.sort[0].selector;
                    params['SortADSC'] = values.sort[0].desc;
                }
                $.ajax({
                    headers: header, dataType: "json",
                    data: params,
                    url: URL_API_PM_READ + ACTION_FILEGET,
                    success: function (data) {
                        var list = data.result.items;
                        deferred.resolve(
                            list,
                            {
                                totalCount: list.length,
                            }
                        );
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log(xhr.responseJSON);
                        deferred.reject("Có lỗi xảy ra trong quá trình lấy danh sách 'Hạng mục'. Mở Console để xem chi tiết.");
                    },
                    timeout: 10000
                });
                return deferred.promise();
            },
        });
        //let customStore_AccountInfo = customStore_READ_ALL_ACC(ACTION_READ_ACCOUNTINFO);
        let customStore_AccountInfo = new DevExpress.data.CustomStore({
            key: "accountId",
            loadMode: "raw",
            load: (values) => {
                var deferred = $.Deferred();
                $.ajax({
                    headers: header, dataType: "json",
                    url: URL_API_PM_READ + ACTION_ACCOUNTINFO,
                    success: function (data) {
                        var list = data.result.items;
                        deferred.resolve(list);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log(xhr.responseJSON);
                        deferred.reject("Có lỗi xảy ra trong quá trình lấy danh sách 'Giai Đoạn'. Mở Console để xem chi tiết.");
                    },
                    timeout: 10000
                });
                return deferred.promise();
            },
        });


        //------------------------- Load dữ liệu --------------------------------------------

        $(function () {
            loadData();
        });

        let loadData = () => {
            $("#container").dxTreeList({
                height: heightScreen,
                dataSource: customStore,
                repaintChangesOnly: true,
                remoteOperations: {
                    filtering: true,
                    sorting: true,
                    pagging: true,
                    grouping: false
                },
                scrolling: { mode: "standard" },
                rootValue: 0,
                parentIdExpr: "parentId",
                keyExpr: "id",
                showBorders: false,
                showColumnHeaders: true,
                showColumnLines: false,
                hoverStateEnabled: true,
                showRowLines: true,
                columnAutoWidth: true,
                wordWrapEnabled: true,
                rowAlternationEnabled: false,
                columns: [
                    //{
                    //    dataField: "code",
                    //    caption: "Mã",
                    //    dataType: "string",
                    //    visiable :false,
                    //    editorOptions: {
                    //        readOnly: true,
                    //        placeholder: "auto gen",
                    //    }
                    //},//mã
                    {
                        dataField: "barCode",
                        caption: "Mã",
                        dataType: "string",
                        alignment: "left",
                        editorOptions: {
                            readOnly: true,
                            placeholder: "auto gen",
                        }
                    },//mã barcode
                    {
                        dataField: "rev",
                        caption: "REV",
                        dataType: "string",
                        allowEditing: false,
                        alignment: "left",
                        editorOptions: {
                            readOnly: true,
                            //visible: false,
                            placeholder: "auto gen",
                        },
                    },//rev
                    {
                        dataField: "workItemId", caption: "Hạng mục",
                        lookup: {
                            dataSource: customStore_HangMuc,
                            valueExpr: "id", displayExpr: "title",
                        },
                        editorType: "dxLookup",
                        alignment: "left",
                        editorOptions: {
                            dataSource: customStore_HangMuc,
                            valueExpr: "id",
                            displayExpr: "title",
                            placeholder: "Vui lòng chọn...",
                            searchEnabled: true,
                            showClearButton: true,
                            itemTemplate: function (data) {
                                return $("<div>").append($("<b>").append(data.code).addClass("mr-1"), $("<em>").append(data.title));
                            },
                        },
                        validationRules: [{ type: "required" }],
                    },//hangMucId
                    {
                        dataField: "createBy",
                        caption: "Người đệ trình",
                        dataType: "number",
                        allowEditing: false,
                        alignment: "left",
                        lookup: {
                            dataSource: customStore_AccountInfo,
                            valueExpr: "accountId", displayExpr: "avatarImg",
                        },
                        editorOptions: {
                            readOnly: true,
                            //visible: false,
                            placeholder: "auto gen",
                        },
                        cellTemplate: (c, o) => {
                            $("<img />")
                                .attr('id', "popover-target-" + o.key)
                                .attr("src", "data:image/png;base64," + o.text)
                                .addClass("img-circle elevation-2 img-size-30")
                                .attr("onerror", "this.onerror=null;this.src='https://qlcv.tayho.com.vn/Content/user-avartar/avartar-default.jpg';")
                                .appendTo(c);
                            $("<div />")
                                .attr('id', "popover-detail-" + o.key)
                                .append("<div>( " + (o.data.accountName) + ' Đã tạo ' + moment(o.data.createDate).locale("vi").fromNow() + ")" + "</div>")
                                .appendTo(c);
                            $("#popover-detail-" + o.key).dxPopover({
                                target: "#popover-target-" + o.key,
                                showEvent: "mouseenter", hideEvent: "mouseleave",
                                position: "bottom",
                                animation: {
                                    show: { type: "pop", from: { scale: 0 }, to: { scale: 1 } },
                                    hide: { type: "fade", from: 1, to: 0 },
                                }
                            });

                        },
                    },//account

                    {
                        dataField: "documentTypeId",
                        caption: "Loại tài liệu",
                        alignment: "left",
                        lookup: {
                            dataSource: customStore_DocumetnType,
                            valueExpr: "id",
                            displayExpr: "title",
                        },
                        editorType: "dxLookup",
                        editorOptions: {
                            dataSource: customStore_DocumetnType,
                            valueExpr: "id", displayExpr: "title",
                            placeholder: "Vui lòng chọn...",
                            searchEnabled: true, showClearButton: true,
                            itemTemplate: function (data) {
                                return $("<div>").append($("<b>").append(data.code).addClass("mr-1"), $("<em>").append(data.title));
                            },
                        },
                        validationRules: [{ type: "required" }],
                    },//loại tài liệu Id
                    {
                        dataField: "title",
                        caption: "Tiêu đề",
                        dataType: "string",
                        alignment: "left",
                    },//tiêu đề
                    {
                        dataField: "planRegisterId",
                        caption: "Kế hoạch",
                        visible: false,
                        alignment: "left",
                    },//hangMucId

                    {
                        dataField: "createDate",
                        caption: "Ngày đệ trình",
                        dataType: "date",
                        format: "dd/MM/yyyy",
                        alignment: "left",
                    },//date
                    {
                        dataField: "descriptions",
                        caption: "Mô tả",
                        dataType: "string",
                        alignment: "left",
                    },// descriptions
                    {
                        dataField: "note",
                        caption: "Ghi Chú",
                        dataType: "string",
                        alignment: "left",
                    },// note

                    {
                        dataField: "status",
                        caption: "Trạng thái",
                        dataType: "number",
                        alignment: "left",
                        cellTemplate: (container, options) => {
                            container.append(options.value == 0 ? 'Chờ phản hồi' :
                                options.value == 1 ? 'Tư vấn phản hồi(A)' :
                                    options.value == 2 ? 'Tư vấn phản hồi(B)' :
                                        options.value == 3 ? 'Tư vấn phản hồi(C)' :
                                            options.value == 4 ? 'Tư vấn phản hồi(D)' :
                                                options.value == 5 ? 'Ban phản hồi(A)' :
                                                    options.value == 6 ? 'Ban phản hồi(B)' :
                                                        options.value == 7 ? 'Ban phản hồi(C)' :
                                                            options.value == 8 ? 'Ban phản hồi(D)' : 'Đã gửi')
                        },
                    },//status
                    {
                        dataField: "noAttachment",
                        caption: "File đính kèm",
                        dataType: "number",
                        alignment: "left",
                        cellTemplate: (container, options) => {
                            container.append($('<a>').attr("href", "javaScript:void(0)").text(options.displayValue !== null ? options.displayValue + " file(s)" : "chưa có file"));
                        },
                    },
                    {
                        type: "buttons",
                        width: 110,
                        alignment: "right",
                        buttons: ["edit", "delete", {
                            icon: "add",
                            visible: function (e) {

                                return (e.row.data.parentId === 0 && e.row.data.insert && e.row.data.isVisible === true);
                            },
                            onClick: function (e) {
                                var containerE = e.component;
                                //var myJSON = JSON.stringify(e.row.data);
                                callPopup(
                                    "THÊM MỚI REVERSION",
                                    "/ThongTin/DangKy/_FormRev/" + e.row.data.id,
                                    ($(window).width() > 767 ? "50%" : "80%"),
                                    containerE
                                );
                            }
                        }]
                    },
                ],
                onCellClick: function (e) {
                    if (e.column.dataField === "noAttachment") {
                        loadUpload("RequestRegist", e.row.data, false);
                    }
                },
                paging: {
                    enabled: true,
                    pageSize: 20
                },
                pager: {
                    showPageSizeSelector: true,
                    allowedPageSizes: [10, 20, 40],
                    showInfo: true,
                },
                searchPanel: {
                    highlightCaseSensitive: true,
                    highlightSearchText: true,
                    searchVisibleColumnsOnly: true,
                    visible: WIDTH_CONTAINER > 350
                },
                editing: {
                    allowUpdating: false,
                    //allowUpdating: (e) => {
                    //    return e.row.data.parentId == 0 && e.row.data.update;
                    //},
                    allowDeleting: (e) => {
                        return e.row.data.parentId == 0 && e.row.data.delete;
                    },
                    //allowAdding: (e) => {
                    //    return false;//e.row.data.parentId == 0;
                    //},
                    mode: "popup",
                    useIcons: true,
                    confirmDelete: true,
                    popup: {
                        width: 600, height: "auto",
                        showTitle: true, title: "Trình duyệt",
                        closeOnOutsideClick: false, showCloseButton: true,
                    },
                    form: {
                        labelLocation: "left",
                        itemType: "group", colCount: 12,
                        showRequiredMark: true,
                        requiredMark: "(*)",
                        items: [
                            {
                                colSpan: 12,
                                dataField: "planRegisterId",
                                label: { text: "Kế hoạch" },
                                lookup: {
                                    dataSource: customStore_HangMuc,
                                    valueExpr: "id", displayExpr: "title",
                                },
                                editorType: "dxSelectBox",
                                editorOptions: {
                                    searchMode: "contains",
                                    searchExpr: ['code', 'title'],
                                    showClearButton: true,
                                    dataSource: customStore_PLAN(""),
                                    valueExpr: "id", displayExpr: "title",
                                    placeholder: "Vui lòng chọn...",
                                    searchEnabled: true, showClearButton: true,
                                    itemTemplate: function (data) {
                                        return $("<div>").append($("<b>").append(data.code).addClass("mr-1"), $("<em>").append(data.title));
                                    },
                                    onValueChanged: function (data) {
                                        //form.option("labelLocation", data.value);
                                    },
                                },
                            },
                            {
                                colSpan: 12,
                                dataField: "documentTypeId",
                                label: { text: "Loại tài liệu" },
                            },
                            {
                                colSpan: 12,
                                dataField: "workItemId",
                                label: { text: "Hạng mục" },
                            },
                            {
                                colSpan: 12,
                                dataField: "title",
                                label: { text: "Tiêu đề" },
                            },
                            {
                                colSpan: 12,
                                dataField: "descriptions",
                                label: { text: "Mô tả" },
                                editorType: "dxTextArea",
                            },
                            {
                                colSpan: 12,
                                dataField: "note",
                                label: { text: "Ghi chú" },
                            },
                        ],

                    },
                },
                onToolbarPreparing: function (e) {
                    var container = e.component;
                    e.toolbarOptions.items.unshift(
                        {
                            location: "before",
                            widget: "dxSelectBox",
                            options: {
                                dataSource: customStore_Projects,
                                valueExpr: "id",
                                displayExpr: "title",
                                searchEnabled: true,
                                searchMode: "contains",
                                width: "100%",
                                stylingMode: "filled",
                                showClearButton: false,
                                value: PROJECTID,
                                onValueChanged: function (data) {
                                    PROJECTID = data.value;
                                    localStorage.setItem('projectIdCurrent', PROJECTID);
                                    loadData(customStore);
                                },
                            },
                        },
                        {
                            location: "after",
                            widget: "dxButton",
                            options: {
                                text: "Thêm mới",
                                visible: PermitInAction.insert,
                                //icon: "add",
                                onClick: function () {
                                    callPopup(
                                        "THÊM MỚI ĐĂNG KÝ",
                                        "/ThongTin/DangKy/_FormRegister",
                                        ($(window).width() > 767 ? "50%" : "80%"),
                                        container
                                    );
                                }
                            }
                        },
                        {
                            location: "after",
                            widget: "dxButton",
                            options: {
                                icon: "refresh",
                                stylingMode: "filled",
                                type: "default",
                                onClick: () => container.refresh()
                            }
                        },
                    )
                },
                onInitNewRow: (e) => {
                    e.data.isActive = true;
                    e.data.isVisible = true;
                    e.data.ProjectId = PROJECTID;
                },
                onRowDblClick: function (e) {
                    loadDetail(e.data)
                },
                onContextMenuPreparing: function (e) {

                    if (!e.items) e.items = [];
                    if (e.target == "content" && e.rowIndex >= 0) {
                        e.items.push({
                            icon: "far fa-eye",
                            text: "Xem chi tiết",
                            onItemClick: () => loadDetail(e.row.data)
                        });

                    };
                },
                onCellPrepared: (e) => {
                    if (e.rowType == "data" && e.column.dataField == "barCode") {
                        e.cellElement.find('.dx-treelist-empty-space').toggleClass("dx-treelist-collapsed", e.data.chilCount > 0);
                    }
                },
                //onRowPrepared: (e) => {
                //    if (e.rowType == "data" && e.data.rev == 0) {

                //        e.rowElement.attr("style", "font-weight:bold !important; background-color: rgba(158, 158, 158,.2) !important;")
                //    }
                //},
            });
        }
        /// Load Popup
        let loadDetail = (item) => $("#popup-main").dxPopup({
            width: "60%", height: "95%",
            fullScreen: false,
            dragEnabled: true,
            resizeEnabled: true,
            showTitle: true,
            title: item.title.toUpperCase(),
            showCloseButton: true,
            closeOnOutsideClick: true,
            visible: true,
            elementAttr: {
                class: "popup-priority-1",
            },
            contentTemplate: (c) => {
                var scrollView = $("<div id='scrollView-detail'></div>");
                var content = $("<div/>");
                var content_main = $("<div  ><div id = 'div_dxForm_Main'></div></div>");
                var content_sub = $("<div/>");
                var d = $.Deferred();
                customStore_Detail(item.id).load().then((items) => {
                    var masterItiem = items[0];
                    code = masterItiem.code;
                    $('#div_dxForm_Main').dxForm({
                        elementAttr: {
                            id: "dxForm_Main",
                        },
                        readOnly: true,
                        formData: masterItiem,
                        title: "Main",
                        items: [{
                            itemType: "group",
                            caption: "Chi tiết",
                            colCountByScreen: {
                                md: 2,
                                lg: 2,
                                xs: 1,
                                sm: 1
                            },
                            items: [
                                {
                                    colSpan: 12,
                                    dataField: "barCode",
                                    label: { text: "Mã" },

                                },//tenCongViec
                                {
                                    colSpan: 12,
                                    dataField: "rev",
                                    label: { text: "REV" },
                                },//rev
                                {
                                    colSpan: 12,
                                    dataField: "createBy",
                                    label: { text: "Người đệ trình" },
                                    //lookup: {
                                    //    dataSource: customStore_AccountInfo,
                                    //    valueExpr: "accountId",
                                    //    displayExpr: "accountName",
                                    //},
                                    editorType: "dxLookup",
                                    alignment: "left",
                                    editorOptions: {
                                        dataSource: customStore_AccountInfo,
                                        valueExpr: "accountId",
                                        displayExpr: "accountName",
                                        searchEnabled: true,
                                        showClearButton: true,
                                        itemTemplate: function (data) {
                                            return $("<div>").append($("<b>").append(data.accountName).addClass("mr-1"));
                                        },
                                    },
                                },//account
                                {
                                    colSpan: 12,
                                    dataField: "descriptions",
                                    label: { text: "Mô tả" },
                                },
                                {
                                    colSpan: 12,
                                    dataField: "note",
                                    label: { text: "Ghi chú" },
                                    alignment: "left",
                                },
                                {
                                    colSpan: 12,
                                    dataField: "expectRequestDate",
                                    label: { text: "Ngày dự kiến đệ trình" },
                                    dataType: "date",
                                    width: 150,
                                    alignment: "center",
                                    format: "dd/MM/yyyy",
                                },
                                {
                                    colSpan: 12,
                                    dataField: "expectResponseDate",
                                    label: { text: "Ngày dự kiến phê duyệt" },
                                    dataType: "date",
                                    width: 150,
                                    alignment: "center",
                                    format: "dd/MM/yyyy",
                                },
                                {
                                    colSpan: 12,
                                    dataField: "createDate",
                                    label: { text: "Ngày đệ trình" },
                                    dataType: "date",
                                    width: 150,
                                    alignment: "center",
                                    format: "dd/MM/yyyy",
                                },
                                {
                                    colSpan: 12,
                                    dataField: "updateDate",
                                    label: { text: "Ngày duyệt" },
                                    dataType: "date",
                                    width: 150,
                                    alignment: "center",
                                    format: "dd/MM/yyyy",
                                    editorOptions: {
                                        value: masterItiem.responseRegistDTOs[1].updateDate !== null ? masterItiem.responseRegistDTOs[1].updateDate : '',
                                    }
                                }]
                        }]
                    }).appendTo(content_main);
                    var $i = 0;
                    $.each(masterItiem.responseRegistDTOs, function (key, value) {
                        var $checkNexStepDone = false;
                        if ($i === 0) {
                            if (masterItiem.responseRegistDTOs[1] !== null) {
                                if (masterItiem.responseRegistDTOs[1].modifyBy > 0)
                                    $checkNexStepDone = true;
                            }
                        }
                        var formSub = $("<form />").attr("method", "POST").attr("enctype", "multipart/form-data").attr("id", "form_Sub" + key).data('id', key).addClass("form-submit").append('<div></div>');
                        if ($i == 1 && (masterItiem.responseRegistDTOs[1].modifyBy == 0 || masterItiem.responseRegistDTOs[1].modifyBy === null) && !masterItiem.responseRegistDTOs[1].update) {

                        }
                        else {
                            formSub.dxForm({
                                elementAttr: {
                                    id: "dxForm_Sub" + key,
                                },
                                formData: value,
                                readOnly: ((value.modifyBy < 1) ? (value.update == true ? false : true) : true),
                                items: [{
                                    itemType: "group",
                                    caption: key == 0 ? "Đánh giá Tư vấn" : "Đánh giá Ban",
                                    colCountByScreen: {
                                        md: 1,
                                        lg: 1,
                                        xs: 1,
                                        sm: 1
                                    },
                                    items: [
                                        {
                                            //id:'file-loadder'+key,
                                            dataField: "typeOfResult",
                                            label: {
                                                text: "Đánh giá"
                                            },
                                            dataType: "number",
                                            alignment: "left",
                                            editorType: "dxSelectBox",
                                            editorOptions: {
                                                disabled: 0,
                                                dataSource: typeApprove,
                                                displayExpr: "text",
                                                valueExpr: "value",
                                            },
                                            editorType: "dxSelectBox",
                                            validationRules: [{ type: "required" }],
                                            cellTemplate: (container, options) => {
                                                container.append(options.value == 1 ? 'Đồng ý' : options.value == 2 ? 'Đồng ý kèm ý kiến' : options.value == 3 ? 'Từ chối' : options.value == 4 ? 'Trả lại' : '')
                                            },
                                        },//AttachmentisApprove
                                        {
                                            colSpan: 12,
                                            dataField: "description",
                                            label: { text: "Ý kiến" },
                                            //editorType: "dxTextArea",

                                        },
                                        {
                                            colSpan: 12,
                                            dataField: "noAttachment",
                                            label: { text: "File(s)" },
                                            template: (container) => {
                                                return $('<a>').click(function () {
                                                    console.log(masterItiem);
                                                    loadFileAttachment("ResponseRegist", value, (value.modifyBy == null || value.modifyBy == 0) ? ((value.update == true ? (masterItiem.status <5 ? true: false) : false)) : false, item);
                                                }).attr("href", "javaScript:void(0)").text(container.editorOptions.value !== null ? container.editorOptions.value + " fiels" : "Chưa có file");
                                            },
                                        },
                                        {
                                            itemType: "button",
                                            horizontalAlignment: "center",
                                            buttonOptions: {
                                                text: "Đánh giá",
                                                type: "success",
                                                //useSubmitBehavior: true,
                                                visible: ((value.modifyBy < 1 && !$checkNexStepDone) ? (value.update == true ? true : false) : false),
                                                onClick: function () {
                                                    var request = {
                                                        'id': value.id,
                                                        'description': value.description,
                                                        'typeOfResult': value.typeOfResult
                                                    };
                                                    if (value.typeOfResult == null) {
                                                        DevExpress.ui.notify("Chưa chọn đánh giá!", "error", 3000);
                                                    }
                                                    else {
                                                        if (value.noAttachment === null || value.noAttachment === 0) {
                                                            DevExpress.ui.dialog.confirm("Bạn có chắc muốn đánh giá khi chưa có file(s) đính kèm?", "XÁC NHẬN THÔNG TIN").done(function (dialogResult) {
                                                                if (dialogResult) {
                                                                    ajax_update(URL_API_PM_CMD + ACTION_RESPONSE, value.id, request).then(() => { $("#popup-main").dxPopup("instance").hide().then(() => { loadData(); }); });
                                                                }
                                                            });
                                                        }
                                                        else {
                                                            ajax_update(URL_API_PM_CMD + ACTION_RESPONSE, value.id, request).then(() => { $("#popup-main").dxPopup("instance").hide().then(() => { loadData();});});
                                                           
                                                         
                                                        }

                                                    }

                                                },
                                            },
                                        }]
                                }]
                            }).appendTo(content_sub);
                        }
                       
                        $i++;
                    });
                }, d.reject);
                content.dxDataGrid({
                    elementAttr: {
                        id: "dxDataGrid_detail"
                    },
                    dataSource: customStore_Detail(item.id),
                    remoteOperations: {
                        paging: true,
                        sorting: true,
                    },
                    repaintChangesOnly: true,
                    showBorders: true,
                    showColumnHeaders: true,
                    showColumnLines: false,
                    hoverStateEnabled: true,
                    showRowLines: true,
                    columnAutoWidth: true,
                    wordWrapEnabled: true,
                    rowAlternationEnabled: true,
                    paging: {
                        enabled: true,
                        pageSize: 20
                    },
                    pager: {
                        showPageSizeSelector: true,
                        allowedPageSizes: [10, 20, 40],
                        showInfo: true,
                    },
                    columns: [
                        {
                            caption: "STT",
                            alignment: "center",
                            cellTemplate: (c, o) => $("<div/>").append(o.rowIndex + 1).appendTo(c),
                        },//STT
                        {
                            dataField: "code",
                            caption: "Mã",
                            dataType: "string",
                            alignment: "left",
                            dataType: "string",
                            //editorType: "dxTextBox",
                            //editorOptions: {
                            //    placeholder: "Vui lòng nhập...",
                            //    showClearButton: true,
                            //},
                            //validationRules: [{ type: "required" }]
                        },//tenCongViec
                        {
                            dataField: "rev",
                            caption: "REV",
                            dataType: "string",
                            alignment: "left",
                        },//rev
                        {
                            dataField: "accountName",
                            caption: "Người đệ trình",
                            dataType: "string",
                            alignment: "left",
                        },//account
                        {
                            dataField: "descriptions",
                            caption: "Mô tả",
                            dataType: "string",
                            alignment: "left",
                        },
                        {
                            dataField: "note",
                            caption: "Ghi chú",
                            dataType: "string",
                            alignment: "left",
                        },
                        {
                            dataField: "createPlanDate",
                            caption: "Ngày lên kế hoạch",
                            dataType: "date",
                            width: 150,
                            alignment: "left",
                            format: "dd/MM/yyyy",
                        },

                        {
                            dataField: "expectFromDate",
                            caption: "Dự kiến bắt đầu",
                            dataType: "date",
                            width: 150,
                            alignment: "left",
                            format: "dd/MM/yyyy",
                        },
                        {
                            dataField: "expectToDate",
                            caption: "Dự kiến kết thúc",
                            dataType: "date",
                            width: 150,
                            alignment: "left",
                            format: "dd/MM/yyyy",
                        },
                        {
                            dataField: "fromDate",
                            caption: "Bắt đầu",
                            dataType: "date",
                            width: 150,
                            alignment: "left",
                            format: "dd/MM/yyyy",
                        },
                        {
                            dataField: "toDate",
                            caption: "Kết thúc",
                            dataType: "date",
                            width: 150,
                            alignment: "left",
                            format: "dd/MM/yyyy",
                        },
                        {
                            dataField: "noAttachment",
                            caption: "File đính kèm",
                            dataType: "number",
                            alignment: "left",
                            cellTemplate: (container, options) => {
                                container.append($('<a>').attr("href", "javaScript:void(0)").text(options.displayValue !== null ? options.displayValue + " fiels" : "chưa có file"));
                            },
                        },
                    ],
                    editing: {
                        mode: "batch",
                        allowAdding: false,
                        allowDeleting: false,
                        allowUpdating: false,
                    },
                    onCellClick: function (e) {
                        if (e.column.dataField === "noAttachment") {

                            console.log(item);
                            loadUpload("RequestRegist", e.row.data, false);
                        }
                    },
                });
                scrollView.append(content_main, content_sub);
                scrollView.dxScrollView({
                    width: '100%',
                    height: '100%'
                });
                c.append(scrollView);
                return c;
            }
        }).addClass("popup-priority-1");

        let loadUpload = (table, item, isUpload, parentItem) => $("#popup-main-upload").dxPopup({
            width: "70%",
            height: "50%",
            fullScreen: false,
            dragEnabled: true,
            resizeEnabled: true,
            showTitle: true,
            title: item.title && item.title.toUpperCase(),
            showCloseButton: true, closeOnOutsideClick: true,
            visible: true,
            //elementAttr: {
            //    class: "popup-priority-2",
            //},
            contentTemplate: (c) => {
                var scrollView = $("<div id='scrollView'></div>");
                var content = $("<div/>");
                var content_Upload = $("<form />").attr("method", "POST").attr("enctype", "multipart/form-data").attr("id", "form").append('<div id = "fileuploader-container" ><div id="file-uploader"></div></div ><div id="button"></div>');
                content.dxDataGrid({
                    dataSource: customStore_File(table, item),
                    elementAttr: {
                        id: "dx-upload-file-1",
                    },
                    remoteOperations: {
                        paging: true,
                        sorting: true,
                    },
                    repaintChangesOnly: true,
                    showBorders: true,
                    showColumnHeaders: true,
                    showColumnLines: false,
                    hoverStateEnabled: true,
                    showRowLines: true,
                    columnAutoWidth: true,
                    wordWrapEnabled: true,
                    wordWrapEnabled: true,
                    rowAlternationEnabled: true,
                    paging: {
                        enabled: true,
                        pageSize: 20
                    },
                    pager: {
                        showPageSizeSelector: true,
                        allowedPageSizes: [10, 20, 40],
                        showInfo: true,

                    },
                    columns: [
                        {
                            caption: "STT", alignment: "center",
                            cellTemplate: (c, o) => $("<div/>").append(o.rowIndex + 1).appendTo(c),
                            width: '10%',
                        },
                        {
                            dataField: "fileName",
                            caption: "Tên file",
                            dataType: "string",
                            width: '50%',
                        },//rev
                        {
                            caption: "File",
                            dataType: "string",
                            cellTemplate: (c, o) => {
                                var x = (o.data.host + "\\" + o.data.url + "\\" + o.data.fileName).replaceAll('/', '\\');
                                if (!x.includes('null'))
                                    if (['.png', '.jpg', '.jpge'].includes(o.data.tail.toLowerCase(x))) {

                                        $("<a/>").append($("<img/>").attr("src", x).attr("style", "max-width :150px;").attr("onerror", "this.onerror=null;this.src='https://qlcv.tayho.com.vn/Content/user-avartar/avartar-default.jpg';")).appendTo(c);
                                    }
                                    else if (['.pdf'].includes(o.data.tail.toLowerCase(x))) {
                                        $("<a />").attr("href", x).attr("target", "_blank").addClass("far fa-file-pdf").appendTo(c);
                                    }
                                    else {
                                    }
                            },
                        }, //url
                    ],
                    editing: {
                        mode: "batch",
                        allowAdding: false,
                        allowDeleting: (e) => { e.row.data.createBy === UserCurrentInfo.id ? true : false },
                        allowUpdating: false,
                    },
                    onToolbarPreparing: (e) => {
                    //    var container = e.component;
                    //    e.toolbarOptions.items.unshift(
                    //        {
                    //            location: "after", widget: "dxButton",
                    //            options: {
                    //                stylingMode: "filled",
                                    
                    //                onClick: () => container.refresh()
                    //            }
                    //        })
                    },

                });
                scrollView.append(content, content_Upload);
                scrollView.dxScrollView({
                    width: '100%',
                    height: '100%'
                });
               
                $(function () {
                    if (isUpload) {
                        //$("#form").append("OwnerById",1);
                        fileUploader();

                        $("#button").dxButton({
                            text: "Lưu ảnh",
                            type: "success",
                            onClick: function (e) {
                                isUpload++;
                                var fileWrappers = fileUploader()._files;
                                var resValid = true
                                for (var i = 0; i < fileWrappers.length; i++) {
                                    if (fileWrappers[i].isValid() === false) {
                                        resValid = false;
                                    }
                                }
                                if (!resValid) {
                                   
                                    DevExpress.ui.notify("Vui lòng kiểm tra lại!", "error", 3000);
                                }
                                else
                                {
                                    loadingPanel.show();
                                    var fd = $("#form")[0];
                                    var formData = new FormData(fd);
                                    formData.append("OwnerById", item.id);
                                    if ('code' in item) {
                                        formData.append("Code", item.code);
                                    }
                                    else {
                                        formData.append("Code", code);
                                    }
                                    formData.append('token', UserCurrentInfo.accessToken);
                                    for (var pair of formData.entries()) {
                                        console.log(pair[0] + ', ' + pair[1]);
                                    }
                                    var files = fileUploader().dxFileUploader("instance").option("value");
                                    if (files.length > 0) {
                                        $.each(files, function (key, value) {
                                            formData.append(files[key].name, files[key]);
                                        });
                                    }
                                    //formData.append("Code", item.code);
                                    formData.append("OwnerByTable", table);
                                    $.ajax({
                                        type: "POST",
                                        enctype: 'multipart/form-data',
                                        url: "/ThongTin/DangKy/CreateFile",
                                        data: formData,
                                        processData: false,
                                        contentType: false,
                                        cache: false,
                                        timeout: 600000,
                                        success: function (rs) {
                                            loadingPanel.hide();
                                            DevExpress.ui.notify(rs.result, rs.status, 3000);
                                            //if (rs.status == "success") {
                                            //    $("#popup-register").dxPopup('instance').hide();
                                            //}
                                        },
                                        error: function (xhr, textStatus, errorThrown) {
                                            loadingPanel.hide();
                                            DevExpress.ui.notify("Có lỗi xảy ra: " + errorThrown, "error", 3000);
                                        }
                                    });
                                }
                                //e.preventDefault();
                            }
                        }).dxFileUploader("instance");
                    }

                });
                c.append(scrollView);
                return c;
            },
            //onHidden: (c) => {
            //    $("#dxDataGrid_detail").dxDataGrid('instance').refresh();
            //},
            onHidden: function () {
                if (isUpload > 0) {
                    $("#popup-main").dxPopup('instance').hide().then(() => {
                        loadDetail(parentItem);
                    });
                }
                //loadDetail(item);
            },
        }).addClass("popup-priority-2");
        var fileUploader = () => $("#file-uploader").dxFileUploader({
            selectButtonText: "Chọn tập tin...",
            labelText: "Hoặc kéo thả vào đây",
            showFileList: true,
            multiple: true,
            uploadMode: "useForm",
            accept: ".jpg,.jpeg,.gif,.png,.pdf",
            allowedFileExtensions: [".jpg", ".jpeg", ".png", ".pdf"],
            maxFileSize: 52428800,
        }).dxFileUploader("instance");
        function loadFileAttachment(table, item, isUpload, parentItem) {
            loadUpload(table, item, isUpload, parentItem);
        }

        function callPopup(title, url, width, container) {
            var isFullscreen = false;
            if (width == "100%") isFullscreen = true;
            $("#popup-register").dxPopup({
                width: width,
                height: "100vh",
                fullScreen: isFullscreen,
                position: { my: 'top', at: 'top', of: window },
                dragEnabled: true,
                resizeEnabled: true,
                visible: true,
                showTitle: true,
                closeOnOutsideClick: false,
                showCloseButton: true,
                title: title,
                contentTemplate: function (container) {
                    var scrollView = $("<div id='scrollView'></div>");
                    var content = $("<div/>");
                    content.load(url);
                    scrollView.append(content);
                    scrollView.dxScrollView({
                        width: '100%',
                        height: '100%'
                    });
                    container.append(scrollView);
                    return container;
                },
                onHiding: function () {
                    container.refresh();
                },
                onHidden: function () {
                    loadData();
                }
            });
        }


    </script>
}

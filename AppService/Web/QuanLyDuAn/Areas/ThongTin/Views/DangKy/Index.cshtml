@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section style{

    <style>
        .long-title h3 {
            font-family: 'Segoe UI Light', 'Helvetica Neue Light', 'Segoe UI', 'Helvetica Neue', 'Trebuchet MS', Verdana;
            font-weight: 200;
            font-size: 28px;
            text-align: center;
            margin-bottom: 20px;
        }

        .dx-form-group-caption {
            font-size: 25px;
        }
    </style>
}
<div id="popup-main-sub"></div>
<div id="popup-main-upload" style="z-index:99"></div>
<div class="row">
    <div class="col-12">
        <div id="container" class="elevation-2"></div>
    </div>
</div>


@section script{
    <script>

        const ACTION = "/RequestRegist/GetByAccountID";
        const ACTION_DETAIL = "/RequestRegist/GetDetail";
        const ACTION_RESPONSEBYACC = "/ResponseRegist/getByAccount";
        const ACTION_PLAN = "/PlanRegister";
        const ACTION_RESPONSE = "/ResponseRegist";
        const ACTION_FILEGET = "/FilesAttachment/getBy";
        const ACTION_CMD = "/RequestRegist";
        const ACTION_PROJECT = "/Projects";
        const ACTION_HANGMUC = "/WorkItems";
        const ACTION_DOCUMENTTYPE = "/DocumentType";
        const ACTION_REPLY = "/ResponseRegistReply";

        var PROJECTID = isNullOrEmpty(localStorage.getItem("projectIdCurrent")) ? parseInt(localStorage.getItem("projectIdCurrent")) : 0;

        var WIDTH_CONTAINER = $("#container").width();

        let customStore = new DevExpress.data.CustomStore({
            key: "id",
            load: (values) => {
                let deferred = $.Deferred(), params = { 'FindId': 'projectId,' + PROJECTID };
                if (values.filter && values.filter[0] == "parentId") params['FindParentId'] = values.filter[2];
                if (values.sort) {
                    params['SortCol'] = values.sort[0].selector;
                    params['SortADSC'] = values.sort[0].desc;
                    params['FindId'] = 'projectId,' + PROJECTID;
                }

                $.ajax({
                    headers: header,
                    url: URL_API_PM_READ + ACTION,
                    dataType: "json",
                    data: params,
                    success: function (data) {
                        let list = data.result.items;
                        deferred.resolve(list);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        deferred.reject("Có lỗi xảy ra trong quá trình lấy danh sách. Mở Console để xem chi tiết.");
                    },
                    timeout: 10000//10 giây
                });

                return deferred.promise();
            },
            insert: (values) => ajax_insert(URL_API_PM_CMD + ACTION_CMD, values),
            update: (key, values) => ajax_update(URL_API_PM_CMD + ACTION_CMD, key, values),
            remove: (key) => ajax_delete(URL_API_PM_CMD + ACTION_CMD, key),
        });
        let customStore_Projects = new DevExpress.data.CustomStore({
            key: "id", loadMode: "raw",
            load: (values) => {
                var deferred = $.Deferred();
                $.ajax({
                    headers: header, dataType: "json",
                    url: URL_API_PM_READ + ACTION_PROJECT,
                    success: function (data) {
                        var list = data.result.items.filter(x => x.isActive == true && x.isVisible == true);
                        if (PROJECTID == 0) {
                            localStorage.setItem("projectIdCurrent", parseInt(list[0].id));
                            PROJECTID = parseInt(list[0].id)
                        }
                        deferred.resolve(list);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log(xhr.responseJSON);
                        deferred.reject("Có lỗi xảy ra trong quá trình lấy danh sách 'Projects'. Mở Console để xem chi tiết.");
                    },
                    timeout: 10000
                });
                return deferred.promise();
            },
        });
        let customStore_Plan = new DevExpress.data.CustomStore({
            key: "id", loadMode: "raw",
            load: (values) => {
                var deferred = $.Deferred();
                $.ajax({
                    headers: header, dataType: "json",
                    url: URL_API_PM_READ + ACTION_PLAN,
                    success: function (data) {
                        var list = data.result.items.filter(x => x.isActive == true && x.isVisible == true);
                        if (PROJECTID == 0) {
                            localStorage.setItem("projectIdCurrent", parseInt(list[0].id));
                            PROJECTID = parseInt(list[0].id)
                        }
                        deferred.resolve(list);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log(xhr.responseJSON);
                        deferred.reject("Có lỗi xảy ra trong quá trình lấy danh sách 'Projects'. Mở Console để xem chi tiết.");
                    },
                    timeout: 10000
                });
                return deferred.promise();
            },
        });
        let customStore_HangMuc = new DevExpress.data.CustomStore({
            key: "id", loadMode: "raw",
            load: (values) => {
                var deferred = $.Deferred();
                $.ajax({
                    headers: header, dataType: "json",
                    url: URL_API_ACC_READ + ACTION_HANGMUC,
                    success: function (data) {
                        var list = data.result.items.filter(x => x.isActive == true && x.isVisible == true);
                        deferred.resolve(list);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log(xhr.responseJSON);
                        deferred.reject("Có lỗi xảy ra trong quá trình lấy danh sách 'Hạng mục'. Mở Console để xem chi tiết.");
                    },
                    timeout: 10000
                });
                return deferred.promise();
            },
        });
        let customStore_DocumetnType = new DevExpress.data.CustomStore({
            key: "id", loadMode: "raw",
            load: (values) => {
                var deferred = $.Deferred();
                $.ajax({
                    headers: header, dataType: "json",
                    url: URL_API_PM_READ + ACTION_DOCUMENTTYPE,
                    success: function (data) {
                        var list = data.result.items.filter(x => x.isActive == true && x.isVisible == true);
                        deferred.resolve(list);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log(xhr.responseJSON);
                        deferred.reject("Có lỗi xảy ra trong quá trình lấy danh sách 'Giai Đoạn'. Mở Console để xem chi tiết.");
                    },
                    timeout: 10000
                });
                return deferred.promise();
            },
        });
        let customStore_Detail = (id) => new DevExpress.data.CustomStore({
            key: "id",
            load: (values) => {
                var deferred = $.Deferred();
                var params = {
                    'PageSize': isNullOrEmpty(values.take) ? values.take : 0,
                    'PageNumber': (isNullOrEmpty(values.take) && isNullOrEmpty(values.skip)) ? ((values.skip / values.take) + 1) : 0,
                    'FindId': id
                }
                if (values.sort) {
                    params['SortCol'] = values.sort[0].selector;
                    params['SortADSC'] = values.sort[0].desc;
                }
                $.ajax({
                    headers: header, dataType: "json",
                    data: params,
                    url: URL_API_PM_READ + ACTION_DETAIL,
                    success: function (data) {
                        var list = data.result.items;
                        deferred.resolve(
                            list,
                            {
                                totalCount: list.length,
                            }
                        );
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log(xhr.responseJSON);
                        deferred.reject("Có lỗi xảy ra trong quá trình lấy danh sách 'Hạng mục'. Mở Console để xem chi tiết.");
                    },
                    timeout: 10000
                });
                return deferred.promise();
            },
            //insert: (values) => ajax_insert(URL_API_PM_CMD + ACTION_CONGVIEC, values),
            update: (key, values) => ajax_update(URL_API_PM_CMD + ACTION_RESPONSE, key, values),
            //remove: (key) => ajax_delete(URL_API_PM_CMD + ACTION_CONGVIEC, key),
        });
        let customStore_Response = (id) => new DevExpress.data.CustomStore({
            key: "id",
            load: (values) => {
                let deferred = $.Deferred();
                var params = {
                    'PageSize': isNullOrEmpty(values.take) ? values.take : 0,
                    'PageNumber': (isNullOrEmpty(values.take) && isNullOrEmpty(values.skip)) ? ((values.skip / values.take) + 1) : 0,
                    'FindId': id
                }
                if (values.sort) {
                    params['SortCol'] = values.sort[0].selector;
                    params['SortADSC'] = values.sort[0].desc;
                }
                $.ajax({
                    headers: header,
                    url: URL_API_PM_READ + ACTION_RESPONSEBYACC,
                    dataType: "json",
                    data: params,
                    success: function (data) {
                        var list = data.result.items;
                        deferred.resolve(
                            list,
                            {
                                totalCount: list.length,
                            }
                        );
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log(xhr.responseJSON);
                        deferred.reject("Có lỗi xảy ra trong quá trình lấy danh sách. Mở Console để xem chi tiết.");
                    },
                    timeout: 10000//10 giây
                });

                return deferred.promise();
            },
            //insert: (values) => ajax_insert(URL_API_PM_CMD + ACTION_CMD, values),
            update: (key, values) => ajax_update(URL_API_PM_CMD + ACTION_RESPONSE, key, values),
            //remove: (key) => ajax_delete(URL_API_PM_CMD + ACTION_CMD, key),
        });
        let customStore_File = (table, item) => new DevExpress.data.CustomStore({
            key: "id",
            load: (values) => {

                var deferred = $.Deferred();
                var params = {
                    'PageSize': isNullOrEmpty(values.take) ? values.take : 0,
                    'PageNumber': (isNullOrEmpty(values.take) && isNullOrEmpty(values.skip)) ? ((values.skip / values.take) + 1) : 0,
                    'FindParentId': table,
                    'FindId': item.id,
                }
                if (values.sort) {
                    params['SortCol'] = values.sort[0].selector;
                    params['SortADSC'] = values.sort[0].desc;
                }
                $.ajax({
                    headers: header, dataType: "json",
                    data: params,
                    url: URL_API_PM_READ + ACTION_FILEGET,
                    success: function (data) {
                        var list = data.result.items;
                        deferred.resolve(
                            list,
                            {
                                totalCount: list.length,
                            }
                        );
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log(xhr.responseJSON);
                        deferred.reject("Có lỗi xảy ra trong quá trình lấy danh sách 'Hạng mục'. Mở Console để xem chi tiết.");
                    },
                    timeout: 10000
                });
                return deferred.promise();
            },
            //insert: (values) => ajax_insert(URL_API_PM_CMD + ACTION_CONGVIEC, values),
            //update: (key, values) => ajax_update(URL_API_PM_CMD + ACTION_RESPONSE, key, values),
            //remove: (key) => ajax_delete(URL_API_PM_CMD + ACTION_CONGVIEC, key),
        });
        $(function () {
            loadData(customStore);
        });

        let loadData = (dataSource) => {
            $("#container").dxTreeList({
                height: heightScreen,
                dataSource: dataSource,
                repaintChangesOnly: true,
                remoteOperations: {
                    filtering: true,
                    sorting: true,
                    grouping: false
                },
                scrolling: { mode: "standard" },
                rootValue: 0,
                parentIdExpr: "parentId",
                keyExpr: "id",
                showBorders: false,
                showColumnHeaders: true,
                showColumnLines: false,
                hoverStateEnabled: true,
                showRowLines: true,
                columnAutoWidth: true,
                wordWrapEnabled: true,
                rowAlternationEnabled: false,
                columns: [
                    {
                        dataField: "code",
                        caption: "Mã",
                        dataType: "string",
                        editorOptions: {
                            readOnly: true,
                            placeholder: "auto gen",
                        }
                    },//tiêu đề
                    {
                        dataField: "title",
                        caption: "Tiêu đề",
                        dataType: "string",

                    },//tiêu đề
                    {
                        dataField: "workItemId", caption: "Hạng mục",
                        lookup: {
                            dataSource: customStore_HangMuc,
                            valueExpr: "id", displayExpr: "title",
                        },
                        editorType: "dxLookup",
                        editorOptions: {
                            dataSource: customStore_HangMuc,
                            valueExpr: "id", displayExpr: "title",
                            placeholder: "Vui lòng chọn...",
                            searchEnabled: true, showClearButton: true,
                            itemTemplate: function (data) {
                                return $("<div>").append($("<b>").append(data.code).addClass("mr-1"), $("<em>").append(data.title));
                            },
                        },
                        validationRules: [{ type: "required" }],
                    },//hangMucId
                    {
                        dataField: "documentTypeId", caption: "Loại tài liệu",
                        lookup: {
                            dataSource: customStore_DocumetnType,
                            valueExpr: "id",
                            displayExpr: "title",
                        },
                        editorType: "dxLookup",
                        editorOptions: {
                            dataSource: customStore_DocumetnType,
                            valueExpr: "id", displayExpr: "title",
                            placeholder: "Vui lòng chọn...",
                            searchEnabled: true, showClearButton: true,
                            itemTemplate: function (data) {
                                return $("<div>").append($("<b>").append(data.code).addClass("mr-1"), $("<em>").append(data.title));
                            },
                        },
                        validationRules: [{ type: "required" }],
                    },//loại tài liệu Id
                    {
                        dataField: "planRegisterId",
                        caption: "Kế hoạch",
                        visible: false,
                        lookup: {
                            dataSource: customStore_HangMuc,
                            valueExpr: "id", displayExpr: "title",
                        },
                        editorType: "dxSelectBox",
                        editorOptions: {
                            searchMode: "contains",
                            searchExpr: ['code', 'title'],
                            showClearButton: true,
                            dataSource: customStore_Plan,
                            valueExpr: "id", displayExpr: "title",
                            placeholder: "Vui lòng chọn...",
                            searchEnabled: true, showClearButton: true,
                            itemTemplate: function (data) {
                                return $("<div>").append($("<b>").append(data.code).addClass("mr-1"), $("<em>").append(data.title));
                            },
                        },
                        //validationRules: [{ type: "required" }],

                    },//hangMucId
                    {
                        dataField: "rev",
                        caption: "REV",
                        dataType: "string",
                        allowEditing: false,
                        editorOptions: {
                            readOnly: true,
                            //visible: false,
                            placeholder: "auto gen",
                        },
                    },//rev
                    {
                        dataField: "AccountName",
                        caption: "Người đệ trình",
                        dataType: "string",
                        editorOptions: {
                            readOnly: true,
                            //visible: false,
                            placeholder: "auto gen",
                        },
                    },//account
                    {
                        dataField: "createDate",
                        caption: "Ngày đệ trình",
                        dataType: "date",
                        format: "dd/MM/yyyy",
                    },//date
                    {
                        dataField: "descriptions",
                        caption: "Mô tả",
                        dataType: "string",
                        alignment: "left",
                    },// descriptions
                    {
                        dataField: "note",
                        caption: "Ghi Chú",
                        dataType: "string",
                        alignment: "left",
                    },// note
                    {
                        dataField: "noAttachment",
                        caption: "File đính kèm",
                        dataType: "number",
                        alignment: "left",
                        cellTemplate: (container, options) => {
                            container.append($('<a>').attr("href", "javaScript:void(0)").text(options.displayValue !== null ? options.displayValue + " fiels" : "chưa có file"));
                        },
                    },
                    {
                        type: "buttons",
                        width: 110,
                        buttons: ["edit", "delete", {
                            icon: "add",
                            visible: function (e) {

                                return e.row.data.parentId === 0 && e.row.data.insert;
                            },
                            onClick: function (e) {

                                var obj = e.row.data;
                                obj['parentId'] = e.row.data.id;
                                var d = $.Deferred();
                                customStore.insert(obj).then(() => {
                                    e.component.refresh().then(d.resolve, d.reject);
                                }, d.reject);
                                e.event.preventDefault();
                            }
                        }]
                    },
                ],
                onCellClick: function (e) {
                    if (e.column.dataField === "noAttachment") {
                        console.log(e);
                        loadUpload("RequestRegist", e.row.data, e.data.noAttachment > 0 ? false:true);
                    }
                },
                paging: {
                    enabled: true,
                    pageSize: 20
                },
                pager: {
                    showPageSizeSelector: true,
                    allowedPageSizes: [10, 20, 40],
                    showInfo: true,
                },
                searchPanel: {
                    highlightCaseSensitive: true,
                    highlightSearchText: true,
                    searchVisibleColumnsOnly: true,
                    visible: WIDTH_CONTAINER > 350
                },
                editing: {
                    allowUpdating: false,
                    //allowUpdating: (e) => {
                    //    return e.row.data.parentId == 0 && e.row.data.update;
                    //},
                    allowDeleting: (e) => {
                        return e.row.data.parentId == 0 && e.row.data.delate;
                    },
                    allowAdding: (e) => {
                        return e.row.data.parentId == 0;
                    },
                    mode: "popup",
                    useIcons: true,
                    confirmDelete: true,
                    popup: {
                        width: 600, height: "auto",
                        showTitle: true, title: "Trình duyệt",
                        closeOnOutsideClick: false, showCloseButton: true,
                    },
                    form: {
                        labelLocation: "left",
                        itemType: "group", colCount: 12,
                        showRequiredMark: true,
                        requiredMark: "(*)",
                        items: [
                            {
                                colSpan: 12,
                                dataField: "planRegisterId",
                                label: { text: "Kế hoạch" },
                            },
                            {
                                colSpan: 12,
                                dataField: "documentTypeId",
                                label: { text: "Loại tài liệu" },
                            },
                            {
                                colSpan: 12,
                                dataField: "workItemId",
                                label: { text: "Hạng mục" },
                            },
                            {
                                colSpan: 12,
                                dataField: "title",
                                label: { text: "Tiêu đề" },
                            },
                            {
                                colSpan: 12,
                                dataField: "descriptions",
                                label: { text: "Mô tả" },
                                editorType: "dxTextArea",
                            },
                            {
                                colSpan: 12,
                                dataField: "note",
                                label: { text: "Ghi chú" },
                            },
                        ],

                    },
                },
                onToolbarPreparing: function (e) {
                    var container = e.component;
                    e.toolbarOptions.items.unshift(
                        {
                            location: "before",
                            widget: "dxSelectBox",
                            options: {
                                dataSource: customStore_Projects,
                                valueExpr: "id", displayExpr: "title",
                                searchEnabled: true,
                                searchMode: "contains",
                                width: "100%",
                                showClearButton: false,
                                value: PROJECTID,
                                onValueChanged: function (data) {
                                    PROJECTID = data.value;
                                    localStorage.setItem('projectIdCurrent', PROJECTID);
                                    loadData(customStore);
                                },
                            },
                        },
                        {
                            location: "after", widget: "dxButton",
                            options: {
                                icon: "refresh", tylingMode: "filled", type: "default",
                                onClick: () => container.refresh()
                            }
                        })
                },
                onInitNewRow: (e) => {
                    e.data.isActive = true;
                    e.data.isVisible = true;
                    e.data.ProjectId = PROJECTID;
                },
                onContextMenuPreparing: function (e) {

                    if (!e.items) e.items = [];
                    if (e.target == "content" && e.rowIndex >= 0) {
                        e.items.push({
                            icon: "far fa-eye",
                            text: "Xem chi tiết",
                            onItemClick: () => loadDetail(e.row.data)
                        });

                    }
                }

            });
        }
        /// Load Popup
        let loadDetail = (item) => $("#popup-main").dxPopup({
            width: "60%", height: "95%",
            fullScreen: false,
            dragEnabled: true,
            resizeEnabled: true,
            showTitle: true, title: item.title.toUpperCase(),
            showCloseButton: true, closeOnOutsideClick: true,
            visible: true,
            contentTemplate: (c) => {
                var scrollView = $("<div id='scrollView-detail'></div>");
                var content = $("<div/>");
                var content_main = $("<div  ><div id = 'div_dxForm_Main'></div></div>");
                var content_sub = $("<div/>");
                var d = $.Deferred();
                customStore_Detail(item.id).load().then((items) => {
                    var masterItiem = items[0];
                    $('#div_dxForm_Main').dxForm({
                        elementAttr: {
                            id: "dxForm_Main"
                        },
                        readOnly: true,
                        formData: masterItiem,
                        title: "Main",
                        items: [{
                            itemType: "group",
                            caption: "Chi tiết",
                            colCountByScreen: {
                                md: 2,
                                lg: 2,
                                xs: 1,
                                sm: 1
                            },
                            items: [
                                {
                                    colSpan: 12,
                                    dataField: "code",
                                    label: { text: "Mã" },

                                },//tenCongViec
                                {
                                    colSpan: 12,
                                    dataField: "rev",
                                    label: { text: "REV" },
                                },//rev
                                {
                                    colSpan: 12,
                                    dataField: "accountName",
                                    label: { text: "Người đệ trình" },
                                },//account
                                {
                                    colSpan: 12,
                                    dataField: "descriptions",
                                    label: { text: "Mô tả" },
                                },
                                {
                                    colSpan: 12,
                                    dataField: "note",
                                    label: { text: "Nghi chú" },
                                    alignment: "left",
                                },
                                {
                                    colSpan: 12,
                                    dataField: "createPlanDate",
                                    label: { text: "Ngày lên kế hoạch" },
                                    dataType: "date",
                                    width: 150,
                                    alignment: "center",
                                    format: "dd/MM/yyyy",
                                },
                                {
                                    colSpan: 12,
                                    dataField: "expectFromDate",
                                    label: { text: "Dự kiến bắt đầu" },
                                    dataType: "date",
                                    width: 150,
                                    alignment: "center",
                                    format: "dd/MM/yyyy",
                                },
                                {
                                    colSpan: 12,
                                    dataField: "expectToDate",
                                    label: { text: "Dự kiến kết thúc" },
                                    dataType: "date",
                                    width: 150,
                                    alignment: "center",
                                    format: "dd/MM/yyyy",
                                },
                                {
                                    colSpan: 12,
                                    dataField: "fromDate",
                                    label: { text: "Bắt đầu" },
                                    dataType: "date",
                                    width: 150,
                                    alignment: "center",
                                    format: "dd/MM/yyyy",
                                },
                                {
                                    colSpan: 12,
                                    dataField: "toDate",
                                    label: { text: "Kết thúc" },
                                    alignment: "center",
                                    format: "dd/MM/yyyy",
                                },]
                        }]
                    }).appendTo(content_main);
                    var $i = 1;
                    $.each(masterItiem.responseRegistDTOs, function (key, value) {
                        console.log(value.modifyBy < 1 ? 1 : 2);
                        var formSub = $("<form />").attr("method", "POST").attr("enctype", "multipart/form-data").attr("id", "form_Sub" + key).data('id', key).addClass("form-submit").append('<div></div>');
                        formSub.dxForm({
                            elementAttr: {
                                id: "dxForm_Sub" + key,
                            },
                            formData: value,
                            readOnly: ((value.modifyBy < 1) ? (value.update = true ? false : true) : true),
                            items: [{
                                itemType: "group",
                                caption: key == 0 ? "Đánh giá Tư vấn" : "Đánh giá Ban",
                                colCountByScreen: {
                                    md: 1,
                                    lg: 1,
                                    xs: 1,
                                    sm: 1
                                },
                                items: [
                                    {
                                        //id:'file-loadder'+key,
                                        dataField: "typeOfResult",
                                        label: {
                                            text: "Đánh giá"
                                        },
                                        dataType: "number",
                                        alignment: "left",
                                        editorType: "dxSelectBox",
                                        editorOptions: {
                                            disabled: 0,
                                            dataSource: typeApprove,
                                            displayExpr: "text",
                                            valueExpr: "value",
                                        },
                                        editorType: "dxSelectBox",
                                        validationRules: [{ type: "required" }],
                                        cellTemplate: (container, options) => {
                                            container.append(options.value == 1 ? 'Đồng ý' : options.value == 2 ? 'Đồng ý kèm ý kiến' : options.value == 3 ? 'Từ chối' : options.value == 4 ? 'Trả lại' : '')
                                        },
                                    },//AttachmentisApprove
                                    {
                                        colSpan: 12,
                                        dataField: "descriptions",
                                        label: { text: "Ý kiến" },
                                        //editorType: "dxTextArea",

                                    },
                                    {
                                        colSpan: 12,
                                        dataField: "noAttachment",
                                        label: { text: "Files" },
                                        template: (container) => {
                                            console.log(1);
                                            console.log(value);
                                            return $('<a>').click(function () { loadFileAttachment("ResponseRegist", value.id); }).attr("href", "javaScript:void(0)").text(container.editorOptions.value !== null ? container.editorOptions.value + " fiels" : "Chưa có file");
                                        },
                                    },
                                    {
                                        itemType: "button",
                                        horizontalAlignment: "center",
                                        buttonOptions: {
                                            text: "Đánh giá",
                                            type: "success",
                                            //useSubmitBehavior: true,
                                            visible: ((value.modifyBy < 1) ? (value.update = true ? true : false) : false),
                                            onClick: function () {
                                                console.log(1);
                                                alert(1);
                                            },
                                        },
                                    }]
                            }]
                        }).appendTo(content_sub);
                        $i++;
                    });
                }, d.reject);
                content.dxDataGrid({
                    elementAttr: {
                        id: "dxDataGrid_detail"
                    },
                    dataSource: customStore_Detail(item.id),
                    remoteOperations: {
                        paging: true,
                        sorting: true,
                    },
                    repaintChangesOnly: true,
                    showBorders: true,
                    showColumnHeaders: true,
                    showColumnLines: false,
                    hoverStateEnabled: true,
                    showRowLines: true,
                    columnAutoWidth: true,
                    wordWrapEnabled: true,
                    rowAlternationEnabled: true,
                    paging: {
                        enabled: true,
                        pageSize: 20
                    },
                    pager: {
                        showPageSizeSelector: true,
                        allowedPageSizes: [10, 20, 40],
                        showInfo: true,
                    },
                    columns: [
                        {
                            caption: "STT", alignment: "center",
                            cellTemplate: (c, o) => $("<div/>").append(o.rowIndex + 1).appendTo(c),
                        },//STT
                        {
                            dataField: "code",
                            caption: "Mã",
                            dataType: "string",
                            alignment: "left",
                            dataType: "string",
                            //editorType: "dxTextBox",
                            //editorOptions: {
                            //    placeholder: "Vui lòng nhập...",
                            //    showClearButton: true,
                            //},
                            //validationRules: [{ type: "required" }]
                        },//tenCongViec
                        {
                            dataField: "rev",
                            caption: "REV",
                            dataType: "string",
                        },//rev
                        {
                            dataField: "accountName",
                            caption: "Người đệ trình",
                            dataType: "string",

                        },//account
                        {
                            dataField: "descriptions", caption: "Mô tả",
                            dataType: "string", alignment: "left",
                        },
                        {
                            dataField: "note", caption: "Nghi chú",
                            dataType: "string", alignment: "left",
                        },
                        {
                            dataField: "createPlanDate",
                            caption: "Ngày lên kế hoạch",
                            dataType: "date",
                            width: 150,
                            alignment: "center",
                            format: "dd/MM/yyyy",
                        },

                        {
                            dataField: "expectFromDate",
                            caption: "Dự kiến bắt đầu",
                            dataType: "date",
                            width: 150,
                            alignment: "center",
                            format: "dd/MM/yyyy",
                        },
                        {
                            dataField: "expectToDate",
                            caption: "Dự kiến kết thúc",
                            dataType: "date",
                            width: 150,
                            alignment: "center",
                            format: "dd/MM/yyyy",
                        },
                        {
                            dataField: "fromDate",
                            caption: "Bắt đầu",
                            dataType: "date",
                            width: 150,
                            alignment: "center",
                            format: "dd/MM/yyyy",
                        },
                        {
                            dataField: "toDate",
                            caption: "Kết thúc",
                            dataType: "date",
                            width: 150,
                            alignment: "center",
                            format: "dd/MM/yyyy",
                        },
                        {
                            dataField: "noAttachment",
                            caption: "File đính kèm",
                            dataType: "number",
                            alignment: "left",
                            cellTemplate: (container, options) => {
                                container.append($('<a>').attr("href", "javaScript:void(0)").text(options.displayValue !== null ? options.displayValue + " fiels" : "chưa có file"));
                            },
                        },
                    ],
                    editing: {
                        mode: "batch",
                        allowAdding: false,
                        allowDeleting: false,
                        allowUpdating: false,
                    },
                    onCellClick: function (e) {
                        if (e.column.dataField === "noAttachment") {
                            loadUpload("RequestRegist", e.row.data, true);
                        }
                    },
                });
                scrollView.append(content_main, content_sub);
                scrollView.dxScrollView({
                    width: '100%',
                    height: '100%'
                });
                c.append(scrollView);
                return c;
            }
        });
        ///// Load Popup Rate
        //let loadRate = (item) => $("#popup-main-sub").dxPopup({
        //    width: "80%", height: "60%",
        //    fullScreen: false,
        //    dragEnabled: true,
        //    resizeEnabled: true,
        //    showTitle: true,
        //    title: item.title && item.title.toUpperCase(),
        //    showCloseButton: true, closeOnOutsideClick: true,
        //    visible: true,
        //    contentTemplate: (c) => {
        //        var scrollView = $("<div id='scrollView'></div>");
        //        var content = $("<div/>");
        //        var content_Upload = $("<div/>");
        //        content.dxDataGrid({
        //            dataSource: customStore_Response(item.id),
        //            remoteOperations: {
        //                paging: true,
        //                sorting: true,
        //            },
        //            repaintChangesOnly: true,
        //            showBorders: true,
        //            showColumnHeaders: true,
        //            showColumnLines: false,
        //            hoverStateEnabled: true,
        //            showRowLines: true,
        //            columnAutoWidth: true,
        //            wordWrapEnabled: true,
        //            rowAlternationEnabled: true,
        //            paging: {
        //                enabled: true,
        //                pageSize: 20
        //            },
        //            pager: {
        //                showPageSizeSelector: true,
        //                allowedPageSizes: [10, 20, 40],
        //                showInfo: true,

        //            },
        //            columns: [
        //                {
        //                    caption: "STT", alignment: "center",
        //                    cellTemplate: (c, o) => $("<div/>").append(o.rowIndex + 1).appendTo(c),
        //                },//STT
        //                {
        //                    dataField: "title",
        //                    caption: "Tiêu đề",
        //                    dataType: "string",
        //                    alignment: "left",
        //                },//Tiêu đề
        //                {
        //                    dataField: "description",
        //                    caption: "Nhận xét",
        //                    dataType: "string",
        //                },//rev

        //                {
        //                    dataField: "typeOfResult",
        //                    caption: "Kết quả",
        //                    dataType: "number",
        //                    alignment: "left",
        //                    cellTemplate: (container, options) => {
        //                        container.append(options.value == 1 ? 'Đồng ý' : options.value == 2 ? 'Đồng ý kèm ý kiến' : options.value == 3 ? 'Từ chối' : options.value == 4 ? 'Trả lại' : '')
        //                    },
        //                    editorOptions: {
        //                        dataSource: typeApprove,
        //                        displayExpr: "text",
        //                        valueExpr: "value",
        //                    },
        //                    editorType: "dxSelectBox",
        //                    validationRules: [{ type: "required" }],
        //                },//account
        //            ],
        //            onCellClick: function (e) {
        //                if (e.column.dataField === "noAttachment") {
        //                    loadUpload("ResponseRegist", e.row.data, true);
        //                }
        //            },
        //            editing: {
        //                mode: "batch",
        //                allowAdding: false,
        //                allowDeleting: true,
        //                allowUpdating: true,
        //            },
        //            onToolbarPreparing: (e) => {
        //                var container = e.component;
        //                e.toolbarOptions.items.unshift(
        //                    {
        //                        location: "after", widget: "dxButton",
        //                        options: {
        //                            icon: "refresh", type: "default",
        //                            onClick: () => container.refresh()
        //                        }
        //                    })
        //            },
        //        });
        //        content_Upload.dxFileUploader({
        //            selectButtonText: "Select photo",
        //            labelText: "",
        //            accept: "image/*",
        //            uploadMode: "useForm"
        //        });
        //        scrollView.append(content, content_Upload);
        //        scrollView.dxScrollView({
        //            width: '100%',
        //            height: '100%'
        //        });
        //        c.append(scrollView);
        //        return c;
        //    },
        //    onHidden: (c) => {
        //        $("#dxDataGrid_detail").dxDataGrid('instance').refresh();
        //    }
        //});
        ///// Load Popup Upload file
        let loadUpload = (table, item, isUpload) => $("#popup-main-upload").dxPopup({
            width: "70%",
            height: "50%",
            fullScreen: false,
            dragEnabled: true,
            resizeEnabled: true,
            showTitle: true,
            title: item.title && item.title.toUpperCase(),
            showCloseButton: true, closeOnOutsideClick: true,
            visible: true,
            contentTemplate: (c) => {
                var scrollView = $("<div id='scrollView'></div>");
                var content = $("<div/>");
                var content_Upload = $("<form />").attr("method", "POST").attr("enctype", "multipart/form-data").attr("id", "form").append('<div id = "fileuploader-container" ><div id="file-uploader"></div></div ><div id="button"></div>');
                content.dxDataGrid({
                    dataSource: customStore_File(table, item),
                    remoteOperations: {
                        paging: true,
                        sorting: true,
                    },
                    repaintChangesOnly: true,
                    showBorders: true,
                    showColumnHeaders: true,
                    showColumnLines: false,
                    hoverStateEnabled: true,
                    showRowLines: true,
                    columnAutoWidth: true,
                    wordWrapEnabled: true,
                    wordWrapEnabled: true,
                    rowAlternationEnabled: true,
                    paging: {
                        enabled: true,
                        pageSize: 20
                    },
                    pager: {
                        showPageSizeSelector: true,
                        allowedPageSizes: [10, 20, 40],
                        showInfo: true,

                    },
                    columns: [
                        {
                            caption: "STT", alignment: "center",
                            cellTemplate: (c, o) => $("<div/>").append(o.rowIndex + 1).appendTo(c),
                            width: '10%',
                        },
                        {
                            dataField: "fileName",
                            caption: "Tên file",
                            dataType: "string",
                            width: '50%',
                        },//rev
                        {
                            caption: "File",
                            dataType: "string",
                            cellTemplate: (c, o) => {
                                var x = (o.data.host + "\\" + o.data.url + "\\" + o.data.fileName).replaceAll('/', '\\');
                                if (!x.includes('null'))
                                    if (['.png', '.jpg', '.jpge'].includes(o.data.tail.toLowerCase(x))) {

                                        $("<a/>").append($("<img/>").attr("src", x).attr("style", "max-width :150px;").attr("onerror", "this.onerror=null;this.src='https://qlcv.tayho.com.vn/Content/user-avartar/avartar-default.jpg';")).appendTo(c);
                                    }
                                    else if (['.pdf'].includes(o.data.tail.toLowerCase(x))) {
                                        $("<a/>").attr("href", x).addClass("far fa-file-pdf").appendTo(c);
                                    }
                                    else {
                                    }
                            },
                        }, //url
                    ],
                    editing: {
                        mode: "batch",
                        allowAdding: false,
                        allowDeleting: false,
                        allowUpdating: false,
                    },
                    onToolbarPreparing: (e) => {
                        var container = e.component;
                        e.toolbarOptions.items.unshift(
                            {
                                location: "after", widget: "dxButton",
                                options: {
                                    icon: "refresh", type: "default",
                                    onClick: () => container.refresh()
                                }
                            })
                    },
                });
                scrollView.append(content, content_Upload);
                scrollView.dxScrollView({
                    width: '100%',
                    height: '100%'
                });
                $(function () {
                    if (isUpload) {
                        //$("#form").append("OwnerById",1);
                        $("#file-uploader").dxFileUploader({
                            selectButtonText: "Select photo",
                            multiple: true,
                            //labelText: "",
                            accept: "*",
                            uploadMode: "useForm",
                        });

                        $("#button").dxButton({
                            text: "Update profile",
                            type: "success",
                            onClick: function () {
                                var fd = $("#form")[0];
                                var formData = new FormData(fd);
                                formData.append("OwnerById", item.id);
                                formData.append("Code", item.code);
                                formData.append("OwnerByTable", table);
                                $.ajax({
                                    url: 'https://api-pm-cmd.tayho.com.vn/api/cmd/v1/FilesAttachment/UploadFile',
                                    type: 'POST',
                                    data: formData,
                                    success: function (data) {
                                        $('.dx-fileuploader-file-status-message').empty();
                                        $('.dx-fileuploader-file-status-message').html('Đã up thành công!');
                                    },
                                    cache: false,
                                    contentType: false,
                                    processData: false,
                                });
                            }
                        });
                    }

                });
                c.append(scrollView);
                return c;
            },
            //onHidden: (c) => {
            //    $("#dxDataGrid_detail").dxDataGrid('instance').refresh();
            //},
        });
        function loadFileAttachment(table, id, isUpload) {
            loadUpload(table, id);

        }


    </script>
}

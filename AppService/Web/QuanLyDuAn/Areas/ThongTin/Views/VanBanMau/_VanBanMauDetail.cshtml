@model int
<form id="form-regist" action="#" method="POST" enctype="application/json">
</form>
<div id="popup-register"></div>
<div class="row">
    <div class="col-12">
        <div id="container" class="elevation-2"></div>
    </div>
</div>
<script>
    //----------------------------- Parameter  ---------------------------
    const ACTION_CUSTOMFORMBODY = "/CustomFormBody";
    const ACTION_DETAIL = "/CustomForm/Detail";
    //----------------------------- Get Content Data  ---------------------------
    let customStore_CUSTOMFORMBODY = (id) => customStore_CMD_READ(ACTION_CUSTOMFORMBODY, ACTION_CUSTOMFORMBODY);
    let customStore_DETAIL  = (id) => customStore_READ_ID(ACTION_DETAIL, id);

    $(function () {
        loadID(@Model);
    });

    let loadID = (id) => {
        $("#container").dxDataGrid({
            height: heightScreen,
            dataSource: customStore_ID(id),
            remoteOperations: {
                filtering: true,
                sorting: true,
                grouping: false
            },
            showBorders: false,
            showColumnHeaders: true,
            showColumnLines: false,
            hoverStateEnabled: true,
            showRowLines: true,
            columnAutoWidth: true,
            wordWrapEnabled: true,
            rowAlternationEnabled: true,
            columns: [
                {
                    dataField: "title",
                    caption: "Tên tài liệu",
                    dataType: "string",
                },
                {
                    dataField: "description",
                    caption: "Mô tả",
                    dataType: "string",
                },
                {
                    type: "buttons", caption: "Tác vụ",
                    width: 120, alignment: "center",
                    buttons: ["edit", "delete", {
                        hint: "Người nhận",
                        icon: "user",
                        //visible: function (e) {
                        //    return !e.row.isEditing && !isChief(e.row.data.Position);
                        //},
                        onClick: function (e) {
                            //alert(1);
                            loadAccount(e.row.data);
                            //var clonedItem = $.extend({}, e.row.data, { ID: ++maxID });

                            //employees.splice(e.row.rowIndex, 0, clonedItem);
                            //e.component.refresh(true);
                            //e.eve,nt.preventDefault();
                        }
                    }],
                }
            ],
            paging: { enabled: true, pageSize: 20 },
            pager: {
                showPageSizeSelector: true,
                allowedPageSizes: [10, 20, 40],
                showInfo: true,
            },
            searchPanel: {
                highlightCaseSensitive: true,
                highlightSearchText: true,
                searchVisibleColumnsOnly: true,
                visible: WIDTH_CONTAINER > 350
            },
            editing: {
                //allowAdding: true,
                allowUpdating: true,
                allowDeleting: true,
                mode: "popup",
                useIcons: true,
                confirmDelete: true,
                popup: {
                    width: 600, height: "auto",
                    showTitle: true, title: "Trình duyệt",
                    closeOnOutsideClick: false, showCloseButton: true,
                },
            },
            onToolbarPreparing: function (e) {
                var container = e.component;
                e.toolbarOptions.items.unshift(
                    {
                        location: "after",
                        widget: "dxButton",
                        options: {
                            icon: "refresh",
                            stylingMode: "filled",
                            type: "default",
                            onClick: () => container.refresh()
                        }
                    },
                )
            },
            onInitNewRow: (e) => {
                e.data.isActive = true;
                e.data.isVisible = true;
                e.data.customFormId = @Model;
            },
            onCellPrepared: (e) => {
                if (e.rowType == "data" && e.columnIndex == 1)
                    e.cellElement.find('.dx-treelist-empty-space').toggleClass("dx-treelist-collapsed", e.data.chilCount > 0)
            },
            onCellClick: function (e) {
                if (e.column.dataField === "noAttachment") {
                    loadUpload("DocumentReleased", e.row.data, false);
                }
            },
            //masterDetail: {
            //    autoExpandAll: false,
            //    component: null,
            //    enabled: true,
            //    render: null,
            //    template: function (container, options) {
            //        $("<div>").dxDataGrid({
            //            showBorders: false,
            //            showColumnHeaders: false,
            //            showColumnLines: false,
            //            hoverStateEnabled: true,
            //            showRowLines: true,
            //            columnAutoWidth: true,
            //            wordWrapEnabled: true,
            //            rowAlternationEnabled: true,
            //            columnAutoWidth: true,
            //            showBorders: true,
            //            dataSource: customStore_DETAIL(options.data.id),
            //            columns: [
            //            ],
            //            editing: {
            //                //allowAdding: true,
            //                allowUpdating: false,
            //                allowDeleting: false,
            //                mode: "popup",
            //                useIcons: true,
            //                confirmDelete: true,
            //                popup: {
            //                    width: 600, height: "auto",
            //                    showTitle: true, title: "Trình duyệt",
            //                    closeOnOutsideClick: false, showCloseButton: true,
            //                },
            //            },
            //            onInitNewRow: (e) => {
            //                e.data.isActive = true;
            //                e.data.isVisible = true;
            //            },
            //            onToolbarPreparing: function (e) {
            //                var container = e.component;
            //                e.toolbarOptions.items.unshift(
            //                    {
            //                        location: "after",
            //                        widget: "dxButton",
            //                        options: {
            //                            icon: "refresh",
            //                            stylingMode: "filled",
            //                            type: "default",
            //                            onClick: () => container.refresh()
            //                        }
            //                    },
            //                )
            //            },
            //        }).attr("style", "margin:auto; width:90%").appendTo(container);
            //    },
            //},
            onContentReady: (e) => {
                e.component;
            },
        });
    };
</script>



@{
    ViewBag.Title = "DanhSachVanBan";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="popup-main"></div>
<div id="popup-sub"></div>
<div class="row">
    <div class="col-12" id="div_container">
        <div id="container" class="elevation-2"></div>
    </div>
</div>
@section script{
    <script src="~/Scripts/page/thongtin.js"></script>
    <script>
        //--------------------READ------------------------------
        const ACTION = "/CustomFormContent";
        const ACTION_CUSTOMTABLE = "/CustomTable";
        const ACTION_PROJECT = "/Projects";
        const ACTION_CUSTOMFORMCONTENTDETAIL = "/CustomFormContent/Detail";
        const ACTION_DETAIL = "/CustomForm/Detail";
        const ACTION_CUSTOMFORM = "/CustomForm";
        const ACTION_LISTOWNER = "/CustomFormContent/ListOwner";
        const ACTION_CELLCONTENT = "/CustomCellContent";
        const ACTION_HANGMUC = "/WorkItems";

        //--------------------CMD------------------------------
        const ACTION_CMD = "/CustomFormContent";
        const ACTION_CMD_CUSTOMFORMCONTENT = "/CustomFormContent";
        var WIDTH_CONTAINER = $("#container").width();
        var WORKITEMS =  1;


        let customStore = customStore_CMD_READ(ACTION_CMD, ACTION_LISTOWNER);
        let customStore_CUSTOMTABLE = customStore_READ_ALL(ACTION_CUSTOMTABLE);
        let customStore_CUSTOMFORMCONTENTDETAIL = (id) => customStore_READ_ID(ACTION_CUSTOMFORMCONTENTDETAIL, id);
        let customStore_DETAIL = (id) => customStore_READ_ID(ACTION_DETAIL, id);
        let customStore_LISTOWNER = (id) => customStore_READ_FILTER(ACTION_LISTOWNER, 'customFormId,' + id);
        var customStore_CUSTOMFORM = customStore_INSERT_READ(ACTION_CMD, ACTION_CUSTOMFORM);
        var customStore_CUSTOMFORMLIST = customStore_READ_ALL(ACTION_CUSTOMFORM);
        var customStore_PROJECT = customStore_READ_ALL(ACTION_PROJECT);
        var customStore_HANGMUC = customStore_READ_ALL(ACTION_HANGMUC);

        $(function () {
            loadData();
        });

        let loadData = () => {
            $("#container").dxDataGrid({
                height: heightScreen,
                dataSource: customStore,
                repaintChangesOnly: true,
                remoteOperations: {
                    filtering: true,
                    sorting: true,
                    grouping: false
                },
                scrolling: { mode: "standard" },
                showBorders: false,
                showColumnHeaders: true,
                showColumnLines: false,
                hoverStateEnabled: true,
                showRowLines: true,
                columnAutoWidth: true,
                wordWrapEnabled: true,
                rowAlternationEnabled: false,
                groupPanel: { visible: true },
                columns: [
                    {
                        dataField: "code",
                        caption: "Ký Hiệu",
                        dataType: "string",
                        alignment: "left",
                    },
                    {
                        dataField: "customFormId",
                        caption: "Tên mẫu văn bản",
                        dataType: "string",
                        alignment: "left",
                        lookup: {
                            dataSource: customStore_CUSTOMFORMLIST,
                            valueExpr: "id",
                            displayExpr: "title",
                        },
                    },
                    {
                        dataField: "createDate",
                        caption: "Ngày tạo văn bản",
                        dataType: "date",
                        alignment: "center",
                    },
                    {
                        dataField: "status",
                        caption: "Trạng thái",
                        dataType: "number",
                        width: 110,
                        alignment: "center",
                        editorType: "dxNumberBox",
                        editorOptions: {
                            min: 1, step: 1, showSpinButtons: true,
                        }, sortOrder: "desc"
                    },
                ],
                paging: {
                    enabled: true,
                    pageSize: 20
                },
                pager: {
                    showPageSizeSelector: true,
                    allowedPageSizes: [10, 20, 40],
                    showInfo: true,
                },
                searchPanel: {
                    highlightCaseSensitive: true,
                    highlightSearchText: true,
                    searchVisibleColumnsOnly: true,
                    visible: WIDTH_CONTAINER > 350
                },
                onToolbarPreparing: function (e) {
                    var container = e.component;
                    e.toolbarOptions.items.unshift(
                        {
                            location: "after",
                            widget: "dxButton",
                            options: {
                                icon: "refresh", tylingMode: "filled", type: "default",
                                onClick: () => container.refresh()
                            },

                        },

                    )
                },
                onInitNewRow: (e) => {
                    e.data.isActive = true;
                    e.data.isVisible = true;
                    e.data.ProjectId = PROJECTID;
                },
                onCellPrepared: (e) => {
                    if (e.rowType == "data" && e.columnIndex == 1)
                        e.cellElement.find('.dx-treelist-empty-space').toggleClass("dx-treelist-collapsed", e.data.chilCount > 0)
                },
                //onRowDblClick: function (e) {
                //    var container = e.component;
                //},
                selection: {
                    mode: "single"
                },
                onContentReady: (e) => {
                    var container = e.component;
                    $("#action-add").dxSpeedDialAction({
                        index: 1, icon: "fas fa-plus",
                        label: "Thêm mới",
                        visible: PermitInAction["insert"],
                        onClick: () => {
                            CALLPOPUP(
                                "Tạo kế hoạch công việc",
                                "/ThongTin/VanBanMau/_DanhSachVanBan",
                                ($(window).width() > 767 ? "50%" : "80%"),
                                container
                            );
                        }
                    }).dxSpeedDialAction("instance");

                    DevExpress.config({
                        floatingActionButtonConfig: {
                            icon: "rowfield",
                            label: "Tác vụ",
                            shading: true,
                            position: {
                                of: e.element,
                                my: "right bottom",
                                at: "right bottom",
                                offset: e.component.pageCount() > 1 ? "-15 -60" : "-15 -15"
                            }
                        }
                    });
                    DevExpress.ui.repaintFloatingActionButton();
                },
                onSelectionChanged: (e) => {
                    var selectedRowData = e.selectedRowsData[0];
                    var selectedRowKey = e.selectedRowKeys[0];
                    var container = document.getElementById("div_container");
                    var containerE = e.component;
                    container.classList.replace("col-lg-12", "col-lg-8");
                    container.classList.replace("col-md-12", "col-md-8");    
                    if (selectedRowData != null && selectedRowKey != null) {
                        var data = e.component.getRowIndexByKey(selectedRowKey);
                        $("#action-update").dxSpeedDialAction({
                            index: 2, icon: "fas fa-edit", label: "Cập nhật thông tin",
                            visible: PermitInAction["update"] && (selectedRowData.createBy == UserCurrentInfo.accountId),
                            onClick: () => {
                                CALLPOPUP(
                                    "Danh sách văn bảo mẫu",
                                    "/ThongTin/VanBanMau/_DienVanBan?id=" + selectedRowKey,
                                    ($(window).width() > 767 ? "50%" : "80%"),
                                    containerE
                                );
                            }
                        }).dxSpeedDialAction("instance");

                        $("#action-delete").dxSpeedDialAction({
                            index: 3,
                            icon: "fas fa-trash",
                            label: "Xoá",
                            visible: (selectedRowData.id != null && PermitInAction["delete"] && selectedRowData.createBy == UserCurrentInfo.accountId),
                            onClick: () => {
                                DevExpress.ui.dialog.confirm("Bạn có chắc là muốn hủy bỏ giá trị của hạng mục?", "XÁC NHẬN THÔNG TIN").done(function (dialogResult) {
                                    if (dialogResult) {
                                        var deferred = $.Deferred();
                                        customStore.remove(selectedRowData.id).then(() => {
                                            DevExpress.ui.notify("Xoá thành công", "success", 3000);
                                            e.component.refresh();
                                        }, deferred.reject);
                                        return deferred.promise();
                                    }
                                });
                            }
                        }).dxSpeedDialAction("instance");
                        //$("#action-log").dxSpeedDialAction({
                        //    index: 4,
                        //    icon: "fas fa-user",
                        //    label: "Phân công",
                        //    visible: (selectedRowData.createBy === UserCurrentInfo.accountId),
                        //    onClick: () => {
                        //        loadAccountPlanMaster(selectedRowData);
                        //    }
                        //}).dxSpeedDialAction("instance");
                    }
                },
            });
        }
    </script>
}



